
USB_Device.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000013f0  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ec  080015a0  080015a0  000115a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800168c  0800168c  00020068  2**0
                  CONTENTS
  4 .ARM          00000000  0800168c  0800168c  00020068  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800168c  0800168c  00020068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800168c  0800168c  0001168c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001690  08001690  00011690  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000068  20000000  08001694  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000068  080016fc  00020068  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  080016fc  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001b8e  00000000  00000000  00020098  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000638  00000000  00000000  00021c26  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000128  00000000  00000000  00022260  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000d0  00000000  00000000  00022388  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0002128c  00000000  00000000  00022458  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001b42  00000000  00000000  000436e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000b4ebd  00000000  00000000  00045226  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000fa0e3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b48  00000000  00000000  000fa160  2**2
                  CONTENTS, READONLY, DEBUGGING
 21 .stab         00000084  00000000  00000000  000faca8  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      00000117  00000000  00000000  000fad2c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000068 	.word	0x20000068
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001588 	.word	0x08001588

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000006c 	.word	0x2000006c
 80001ec:	08001588 	.word	0x08001588

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000298:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800029c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 80002a0:	f003 0301 	and.w	r3, r3, #1
 80002a4:	2b00      	cmp	r3, #0
 80002a6:	d013      	beq.n	80002d0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80002a8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ac:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80002b0:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002b4:	2b00      	cmp	r3, #0
 80002b6:	d00b      	beq.n	80002d0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80002b8:	e000      	b.n	80002bc <ITM_SendChar+0x2c>
    {
      __NOP();
 80002ba:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80002bc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	2b00      	cmp	r3, #0
 80002c4:	d0f9      	beq.n	80002ba <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002c6:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ca:	687a      	ldr	r2, [r7, #4]
 80002cc:	b2d2      	uxtb	r2, r2
 80002ce:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002d0:	687b      	ldr	r3, [r7, #4]
}
 80002d2:	4618      	mov	r0, r3
 80002d4:	370c      	adds	r7, #12
 80002d6:	46bd      	mov	sp, r7
 80002d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002dc:	4770      	bx	lr

080002de <_write>:

/** \brief Redirects `printf()` output to the serial wire out (SWO).
 * This function overrides a weak function symbol and is not to be used directly.
 */
int _write(int file, char *ptr, int len)
{
 80002de:	b580      	push	{r7, lr}
 80002e0:	b086      	sub	sp, #24
 80002e2:	af00      	add	r7, sp, #0
 80002e4:	60f8      	str	r0, [r7, #12]
 80002e6:	60b9      	str	r1, [r7, #8]
 80002e8:	607a      	str	r2, [r7, #4]
  int i=0;
 80002ea:	2300      	movs	r3, #0
 80002ec:	617b      	str	r3, [r7, #20]
  for(i=0 ; i<len ; i++)
 80002ee:	2300      	movs	r3, #0
 80002f0:	617b      	str	r3, [r7, #20]
 80002f2:	e009      	b.n	8000308 <_write+0x2a>
    ITM_SendChar((*ptr++));
 80002f4:	68bb      	ldr	r3, [r7, #8]
 80002f6:	1c5a      	adds	r2, r3, #1
 80002f8:	60ba      	str	r2, [r7, #8]
 80002fa:	781b      	ldrb	r3, [r3, #0]
 80002fc:	4618      	mov	r0, r3
 80002fe:	f7ff ffc7 	bl	8000290 <ITM_SendChar>
  for(i=0 ; i<len ; i++)
 8000302:	697b      	ldr	r3, [r7, #20]
 8000304:	3301      	adds	r3, #1
 8000306:	617b      	str	r3, [r7, #20]
 8000308:	697a      	ldr	r2, [r7, #20]
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	429a      	cmp	r2, r3
 800030e:	dbf1      	blt.n	80002f4 <_write+0x16>

  return len;
 8000310:	687b      	ldr	r3, [r7, #4]
}
 8000312:	4618      	mov	r0, r3
 8000314:	3718      	adds	r7, #24
 8000316:	46bd      	mov	sp, r7
 8000318:	bd80      	pop	{r7, pc}
	...

0800031c <_get_log_level_string>:

char const * const _get_log_level_string(LogLevel const log_level)
{
 800031c:	b480      	push	{r7}
 800031e:	b083      	sub	sp, #12
 8000320:	af00      	add	r7, sp, #0
 8000322:	4603      	mov	r3, r0
 8000324:	71fb      	strb	r3, [r7, #7]
    switch(log_level)
 8000326:	79fb      	ldrb	r3, [r7, #7]
 8000328:	2b01      	cmp	r3, #1
 800032a:	d005      	beq.n	8000338 <_get_log_level_string+0x1c>
 800032c:	2b02      	cmp	r3, #2
 800032e:	d005      	beq.n	800033c <_get_log_level_string+0x20>
 8000330:	2b00      	cmp	r3, #0
 8000332:	d105      	bne.n	8000340 <_get_log_level_string+0x24>
    {
        case LOG_LEVEL_ERROR:
            return "ERROR";
 8000334:	4b05      	ldr	r3, [pc, #20]	; (800034c <_get_log_level_string+0x30>)
 8000336:	e003      	b.n	8000340 <_get_log_level_string+0x24>
        case LOG_LEVEL_INFORMATION:
            return "INFO";
 8000338:	4b05      	ldr	r3, [pc, #20]	; (8000350 <_get_log_level_string+0x34>)
 800033a:	e001      	b.n	8000340 <_get_log_level_string+0x24>
        case LOG_LEVEL_DEBUG:
            return "DEBUG";
 800033c:	4b05      	ldr	r3, [pc, #20]	; (8000354 <_get_log_level_string+0x38>)
 800033e:	e7ff      	b.n	8000340 <_get_log_level_string+0x24>
    }
}
 8000340:	4618      	mov	r0, r3
 8000342:	370c      	adds	r7, #12
 8000344:	46bd      	mov	sp, r7
 8000346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800034a:	4770      	bx	lr
 800034c:	080015a0 	.word	0x080015a0
 8000350:	080015a8 	.word	0x080015a8
 8000354:	080015b0 	.word	0x080015b0

08000358 <_log>:

static void _log(LogLevel const log_level, char const * const format, va_list args)
{
 8000358:	b580      	push	{r7, lr}
 800035a:	b084      	sub	sp, #16
 800035c:	af00      	add	r7, sp, #0
 800035e:	4603      	mov	r3, r0
 8000360:	60b9      	str	r1, [r7, #8]
 8000362:	607a      	str	r2, [r7, #4]
 8000364:	73fb      	strb	r3, [r7, #15]
    if (log_level > system_log_level)
 8000366:	4b0f      	ldr	r3, [pc, #60]	; (80003a4 <_log+0x4c>)
 8000368:	781b      	ldrb	r3, [r3, #0]
 800036a:	7bfa      	ldrb	r2, [r7, #15]
 800036c:	429a      	cmp	r2, r3
 800036e:	d814      	bhi.n	800039a <_log+0x42>
        return;

	printf("[%s] ", _get_log_level_string(log_level));
 8000370:	7bfb      	ldrb	r3, [r7, #15]
 8000372:	4618      	mov	r0, r3
 8000374:	f7ff ffd2 	bl	800031c <_get_log_level_string>
 8000378:	4603      	mov	r3, r0
 800037a:	4619      	mov	r1, r3
 800037c:	480a      	ldr	r0, [pc, #40]	; (80003a8 <_log+0x50>)
 800037e:	f000 fc67 	bl	8000c50 <iprintf>
	vfprintf(stdout, format, args);
 8000382:	4b0a      	ldr	r3, [pc, #40]	; (80003ac <_log+0x54>)
 8000384:	681b      	ldr	r3, [r3, #0]
 8000386:	689b      	ldr	r3, [r3, #8]
 8000388:	687a      	ldr	r2, [r7, #4]
 800038a:	68b9      	ldr	r1, [r7, #8]
 800038c:	4618      	mov	r0, r3
 800038e:	f000 facd 	bl	800092c <vfiprintf>
	printf("\n");
 8000392:	200a      	movs	r0, #10
 8000394:	f000 fc74 	bl	8000c80 <putchar>
 8000398:	e000      	b.n	800039c <_log+0x44>
        return;
 800039a:	bf00      	nop
}
 800039c:	3710      	adds	r7, #16
 800039e:	46bd      	mov	sp, r7
 80003a0:	bd80      	pop	{r7, pc}
 80003a2:	bf00      	nop
 80003a4:	20000000 	.word	0x20000000
 80003a8:	080015b8 	.word	0x080015b8
 80003ac:	20000004 	.word	0x20000004

080003b0 <log_info>:
    _log(LOG_LEVEL_ERROR, format, args);
    va_end(args);
}

void log_info(char const * const format, ...)
{
 80003b0:	b40f      	push	{r0, r1, r2, r3}
 80003b2:	b580      	push	{r7, lr}
 80003b4:	b082      	sub	sp, #8
 80003b6:	af00      	add	r7, sp, #0
    va_list args;
	va_start(args, format);
 80003b8:	f107 0314 	add.w	r3, r7, #20
 80003bc:	607b      	str	r3, [r7, #4]
    _log(LOG_LEVEL_INFORMATION, format, args);
 80003be:	687a      	ldr	r2, [r7, #4]
 80003c0:	6939      	ldr	r1, [r7, #16]
 80003c2:	2001      	movs	r0, #1
 80003c4:	f7ff ffc8 	bl	8000358 <_log>
    va_end(args);
}
 80003c8:	bf00      	nop
 80003ca:	3708      	adds	r7, #8
 80003cc:	46bd      	mov	sp, r7
 80003ce:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80003d2:	b004      	add	sp, #16
 80003d4:	4770      	bx	lr
	...

080003d8 <main>:
#include "stm32f4xx.h"
#include "Helpers/logger.h"
#include "usbd_framework.h"

int main(void)
{
 80003d8:	b580      	push	{r7, lr}
 80003da:	af00      	add	r7, sp, #0
	log_info("Program entrypoint");
 80003dc:	4802      	ldr	r0, [pc, #8]	; (80003e8 <main+0x10>)
 80003de:	f7ff ffe7 	bl	80003b0 <log_info>
	usbd_initialize();
 80003e2:	f000 f903 	bl	80005ec <usbd_initialize>
	for(;;);
 80003e6:	e7fe      	b.n	80003e6 <main+0xe>
 80003e8:	080015e0 	.word	0x080015e0

080003ec <configure_clock>:
LogLevel system_log_level = LOG_LEVEL_DEBUG;
uint32_t SystemCoreClock = 72000000; // 72 MHz


 static void configure_clock()
{
 80003ec:	b480      	push	{r7}
 80003ee:	af00      	add	r7, sp, #0
	 MODIFY_REG(FLASH->ACR,
 80003f0:	4b25      	ldr	r3, [pc, #148]	; (8000488 <configure_clock+0x9c>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	f023 030f 	bic.w	r3, r3, #15
 80003f8:	4a23      	ldr	r2, [pc, #140]	; (8000488 <configure_clock+0x9c>)
 80003fa:	f043 0302 	orr.w	r3, r3, #2
 80003fe:	6013      	str	r3, [r2, #0]
			 FLASH_ACR_LATENCY,
			 _VAL2FLD(FLASH_ACR_LATENCY, FLASH_ACR_LATENCY_2WS) //bit-shift left by val; <<
			 );

	 //Enable HSE (RESET & CLOCK CONTROL REG)
	 SET_BIT(RCC->CR, RCC_CR_HSEON);
 8000400:	4b22      	ldr	r3, [pc, #136]	; (800048c <configure_clock+0xa0>)
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	4a21      	ldr	r2, [pc, #132]	; (800048c <configure_clock+0xa0>)
 8000406:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800040a:	6013      	str	r3, [r2, #0]

	 //wait until HSE is stable and ready
	 while (!READ_BIT(RCC->CR, RCC_CR_HSERDY));
 800040c:	bf00      	nop
 800040e:	4b1f      	ldr	r3, [pc, #124]	; (800048c <configure_clock+0xa0>)
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000416:	2b00      	cmp	r3, #0
 8000418:	d0f9      	beq.n	800040e <configure_clock+0x22>

	 //Configure PLL: source = HSE, SYSCLK = 72MHz
	 MODIFY_REG(RCC->PLLCFGR,
 800041a:	4b1c      	ldr	r3, [pc, #112]	; (800048c <configure_clock+0xa0>)
 800041c:	685b      	ldr	r3, [r3, #4]
 800041e:	4a1c      	ldr	r2, [pc, #112]	; (8000490 <configure_clock+0xa4>)
 8000420:	401a      	ands	r2, r3
 8000422:	491a      	ldr	r1, [pc, #104]	; (800048c <configure_clock+0xa0>)
 8000424:	4b1b      	ldr	r3, [pc, #108]	; (8000494 <configure_clock+0xa8>)
 8000426:	4313      	orrs	r3, r2
 8000428:	604b      	str	r3, [r1, #4]
			 RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_PLLQ | RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLP,
			 _VAL2FLD(RCC_PLLCFGR_PLLM, 4) | _VAL2FLD(RCC_PLLCFGR_PLLN, 72) | _VAL2FLD(RCC_PLLCFGR_PLLQ, 3) | _VAL2FLD(RCC_PLLCFGR_PLLSRC, 1)
			 );

	 //Enable PLL module
	 SET_BIT(RCC->CR, RCC_CR_PLLON);
 800042a:	4b18      	ldr	r3, [pc, #96]	; (800048c <configure_clock+0xa0>)
 800042c:	681b      	ldr	r3, [r3, #0]
 800042e:	4a17      	ldr	r2, [pc, #92]	; (800048c <configure_clock+0xa0>)
 8000430:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000434:	6013      	str	r3, [r2, #0]

	 //wait until PLL is stable
	 while (!READ_BIT(RCC->CR, RCC_CR_PLLRDY));
 8000436:	bf00      	nop
 8000438:	4b14      	ldr	r3, [pc, #80]	; (800048c <configure_clock+0xa0>)
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000440:	2b00      	cmp	r3, #0
 8000442:	d0f9      	beq.n	8000438 <configure_clock+0x4c>

	 //switch system clock to PLL
	 MODIFY_REG(RCC->CFGR,
 8000444:	4b11      	ldr	r3, [pc, #68]	; (800048c <configure_clock+0xa0>)
 8000446:	689b      	ldr	r3, [r3, #8]
 8000448:	f023 0303 	bic.w	r3, r3, #3
 800044c:	4a0f      	ldr	r2, [pc, #60]	; (800048c <configure_clock+0xa0>)
 800044e:	f043 0302 	orr.w	r3, r3, #2
 8000452:	6093      	str	r3, [r2, #8]
			 RCC_CFGR_SW,
			 _VAL2FLD(RCC_CFGR_SW, RCC_CFGR_SW_PLL)
			 );

	 //configure the PPRE1
	 MODIFY_REG(RCC->CFGR,
 8000454:	4b0d      	ldr	r3, [pc, #52]	; (800048c <configure_clock+0xa0>)
 8000456:	689b      	ldr	r3, [r3, #8]
 8000458:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800045c:	4a0b      	ldr	r2, [pc, #44]	; (800048c <configure_clock+0xa0>)
 800045e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000462:	6093      	str	r3, [r2, #8]
			 RCC_CFGR_PPRE1,
			 _VAL2FLD(RCC_CFGR_PPRE1, 4)
			 );

	//wait until PLL is used
	 while( READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
 8000464:	bf00      	nop
 8000466:	4b09      	ldr	r3, [pc, #36]	; (800048c <configure_clock+0xa0>)
 8000468:	689b      	ldr	r3, [r3, #8]
 800046a:	f003 030c 	and.w	r3, r3, #12
 800046e:	2b08      	cmp	r3, #8
 8000470:	d1f9      	bne.n	8000466 <configure_clock+0x7a>

	 CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 8000472:	4b06      	ldr	r3, [pc, #24]	; (800048c <configure_clock+0xa0>)
 8000474:	681b      	ldr	r3, [r3, #0]
 8000476:	4a05      	ldr	r2, [pc, #20]	; (800048c <configure_clock+0xa0>)
 8000478:	f023 0301 	bic.w	r3, r3, #1
 800047c:	6013      	str	r3, [r2, #0]
}
 800047e:	bf00      	nop
 8000480:	46bd      	mov	sp, r7
 8000482:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000486:	4770      	bx	lr
 8000488:	40023c00 	.word	0x40023c00
 800048c:	40023800 	.word	0x40023800
 8000490:	f0bc8000 	.word	0xf0bc8000
 8000494:	03401204 	.word	0x03401204

08000498 <configure_mco1>:

 void configure_mco1()
 {
 8000498:	b480      	push	{r7}
 800049a:	af00      	add	r7, sp, #0
	 //Configures MCO1: source = PLLCLK, MCO1PRE = 2
	 MODIFY_REG(RCC->CFGR,
 800049c:	4b11      	ldr	r3, [pc, #68]	; (80004e4 <configure_mco1+0x4c>)
 800049e:	689b      	ldr	r3, [r3, #8]
 80004a0:	f023 63ec 	bic.w	r3, r3, #123731968	; 0x7600000
 80004a4:	4a0f      	ldr	r2, [pc, #60]	; (80004e4 <configure_mco1+0x4c>)
 80004a6:	f043 638c 	orr.w	r3, r3, #73400320	; 0x4600000
 80004aa:	6093      	str	r3, [r2, #8]
			 RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE,
			 _VAL2FLD(RCC_CFGR_MCO1, 3) | _VAL2FLD(RCC_CFGR_MCO1PRE,4)
	 );

	 //Enable GPIOA (MCO1 is connected to PA8);
	 SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOAEN);
 80004ac:	4b0d      	ldr	r3, [pc, #52]	; (80004e4 <configure_mco1+0x4c>)
 80004ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004b0:	4a0c      	ldr	r2, [pc, #48]	; (80004e4 <configure_mco1+0x4c>)
 80004b2:	f043 0301 	orr.w	r3, r3, #1
 80004b6:	6313      	str	r3, [r2, #48]	; 0x30

	 //Medium Speed
	 MODIFY_REG(GPIOA->OSPEEDR,
 80004b8:	4b0b      	ldr	r3, [pc, #44]	; (80004e8 <configure_mco1+0x50>)
 80004ba:	689b      	ldr	r3, [r3, #8]
 80004bc:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80004c0:	4a09      	ldr	r2, [pc, #36]	; (80004e8 <configure_mco1+0x50>)
 80004c2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80004c6:	6093      	str	r3, [r2, #8]
			 GPIO_OSPEEDR_OSPEED8,
			 _VAL2FLD(GPIO_OSPEEDR_OSPEED8, 1)
	 );

	 //Configure PA8 to work in alternate function mode
	 MODIFY_REG(GPIOA->MODER,
 80004c8:	4b07      	ldr	r3, [pc, #28]	; (80004e8 <configure_mco1+0x50>)
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80004d0:	4a05      	ldr	r2, [pc, #20]	; (80004e8 <configure_mco1+0x50>)
 80004d2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80004d6:	6013      	str	r3, [r2, #0]
			 GPIO_MODER_MODER8,
			 _VAL2FLD(GPIO_MODER_MODER8, 2)
	 );
 }
 80004d8:	bf00      	nop
 80004da:	46bd      	mov	sp, r7
 80004dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e0:	4770      	bx	lr
 80004e2:	bf00      	nop
 80004e4:	40023800 	.word	0x40023800
 80004e8:	40020000 	.word	0x40020000

080004ec <SystemInit>:

void SystemInit(void)
{
 80004ec:	b580      	push	{r7, lr}
 80004ee:	af00      	add	r7, sp, #0
	configure_mco1();
 80004f0:	f7ff ffd2 	bl	8000498 <configure_mco1>
	configure_clock();
 80004f4:	f7ff ff7a 	bl	80003ec <configure_clock>
}
 80004f8:	bf00      	nop
 80004fa:	bd80      	pop	{r7, pc}

080004fc <initialize_gpio_pins>:
#include "usbd_driver.h"


void initialize_gpio_pins()
{
 80004fc:	b480      	push	{r7}
 80004fe:	af00      	add	r7, sp, #0
	//Enable clock for GPIOB
	SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOBEN);
 8000500:	4b0d      	ldr	r3, [pc, #52]	; (8000538 <initialize_gpio_pins+0x3c>)
 8000502:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000504:	4a0c      	ldr	r2, [pc, #48]	; (8000538 <initialize_gpio_pins+0x3c>)
 8000506:	f043 0302 	orr.w	r3, r3, #2
 800050a:	6313      	str	r3, [r2, #48]	; 0x30

	//Sets alternate function 12 for: PB14 (-) and PB15 (+)
	MODIFY_REG(GPIOB->AFR[1],
 800050c:	4b0b      	ldr	r3, [pc, #44]	; (800053c <initialize_gpio_pins+0x40>)
 800050e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000510:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8000514:	4a09      	ldr	r2, [pc, #36]	; (800053c <initialize_gpio_pins+0x40>)
 8000516:	f043 434c 	orr.w	r3, r3, #3422552064	; 0xcc000000
 800051a:	6253      	str	r3, [r2, #36]	; 0x24
			GPIO_AFRH_AFSEL14 | GPIO_AFRH_AFSEL15,
			_VAL2FLD(GPIO_AFRH_AFSEL14, 0xC) | _VAL2FLD(GPIO_AFRH_AFSEL15, 0xC) //12 in hex
	);

	//Configure USB pins (GPIOB) to work in alternate function mode
	MODIFY_REG(GPIOB-> MODER,
 800051c:	4b07      	ldr	r3, [pc, #28]	; (800053c <initialize_gpio_pins+0x40>)
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 8000524:	4a05      	ldr	r2, [pc, #20]	; (800053c <initialize_gpio_pins+0x40>)
 8000526:	f043 4320 	orr.w	r3, r3, #2684354560	; 0xa0000000
 800052a:	6013      	str	r3, [r2, #0]
			GPIO_MODER_MODER14 | GPIO_MODER_MODER15,
			_VAL2FLD(GPIO_MODER_MODER14, 2) | _VAL2FLD(GPIO_MODER_MODER15, 2)
	);

}
 800052c:	bf00      	nop
 800052e:	46bd      	mov	sp, r7
 8000530:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000534:	4770      	bx	lr
 8000536:	bf00      	nop
 8000538:	40023800 	.word	0x40023800
 800053c:	40020400 	.word	0x40020400

08000540 <initialize_core>:

void initialize_core()
{
 8000540:	b480      	push	{r7}
 8000542:	af00      	add	r7, sp, #0
	//Enable the clock for USB core
	SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_OTGHSEN);
 8000544:	4b19      	ldr	r3, [pc, #100]	; (80005ac <initialize_core+0x6c>)
 8000546:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000548:	4a18      	ldr	r2, [pc, #96]	; (80005ac <initialize_core+0x6c>)
 800054a:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800054e:	6313      	str	r3, [r2, #48]	; 0x30

	//Configure USB core to run in device mode, and use embedded full-speed PHY
	MODIFY_REG(USB_OTG_HS -> GUSBCFG,
 8000550:	4b17      	ldr	r3, [pc, #92]	; (80005b0 <initialize_core+0x70>)
 8000552:	68db      	ldr	r3, [r3, #12]
 8000554:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8000558:	f423 5371 	bic.w	r3, r3, #15424	; 0x3c40
 800055c:	4a14      	ldr	r2, [pc, #80]	; (80005b0 <initialize_core+0x70>)
 800055e:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000562:	f443 5311 	orr.w	r3, r3, #9280	; 0x2440
 8000566:	60d3      	str	r3, [r2, #12]
			USB_OTG_GUSBCFG_FDMOD | USB_OTG_GUSBCFG_PHYSEL | USB_OTG_GUSBCFG_TRDT,
			USB_OTG_GUSBCFG_FDMOD | USB_OTG_GUSBCFG_PHYSEL | _VAL2FLD(USB_OTG_GUSBCFG_TRDT, 0x09) //9 is only supported option for this micro-controller
	);

	//Configure device to run in full speed mode
	MODIFY_REG(USB_OTG_HS_DEVICE->DCFG,
 8000568:	4b12      	ldr	r3, [pc, #72]	; (80005b4 <initialize_core+0x74>)
 800056a:	681b      	ldr	r3, [r3, #0]
 800056c:	4a11      	ldr	r2, [pc, #68]	; (80005b4 <initialize_core+0x74>)
 800056e:	f043 0303 	orr.w	r3, r3, #3
 8000572:	6013      	str	r3, [r2, #0]
			_VAL2FLD(USB_OTG_DCFG_DSPD, 0x03)
	);

	//Enable VBUS sensing device
	//SET_BIT(USB_OTG_HS->GCCFG,USB_OTG_GCCFG_VBUSBSEN);
	SET_BIT(USB_OTG_HS->GCCFG, USB_OTG_GCCFG_VBDEN);
 8000574:	4b0e      	ldr	r3, [pc, #56]	; (80005b0 <initialize_core+0x70>)
 8000576:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000578:	4a0d      	ldr	r2, [pc, #52]	; (80005b0 <initialize_core+0x70>)
 800057a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800057e:	6393      	str	r3, [r2, #56]	; 0x38


	//Unmasks the main USB core interrupts
	SET_BIT(USB_OTG_HS->GINTMSK,
 8000580:	4b0b      	ldr	r3, [pc, #44]	; (80005b0 <initialize_core+0x70>)
 8000582:	699a      	ldr	r2, [r3, #24]
 8000584:	490a      	ldr	r1, [pc, #40]	; (80005b0 <initialize_core+0x70>)
 8000586:	4b0c      	ldr	r3, [pc, #48]	; (80005b8 <initialize_core+0x78>)
 8000588:	4313      	orrs	r3, r2
 800058a:	618b      	str	r3, [r1, #24]
			USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_WUIM | USB_OTG_GINTMSK_IEPINT |
			USB_OTG_GINTMSK_RXFLVLM
	);

	//Clear all pending core interrupts
	WRITE_REG(USB_OTG_HS-> GINTSTS, 0xFFFFFFFF);
 800058c:	4b08      	ldr	r3, [pc, #32]	; (80005b0 <initialize_core+0x70>)
 800058e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000592:	615a      	str	r2, [r3, #20]

	//Unmasks USB global interrupt
	SET_BIT(USB_OTG_HS->GAHBCFG, USB_OTG_GAHBCFG_GINT);
 8000594:	4b06      	ldr	r3, [pc, #24]	; (80005b0 <initialize_core+0x70>)
 8000596:	689b      	ldr	r3, [r3, #8]
 8000598:	4a05      	ldr	r2, [pc, #20]	; (80005b0 <initialize_core+0x70>)
 800059a:	f043 0301 	orr.w	r3, r3, #1
 800059e:	6093      	str	r3, [r2, #8]
}
 80005a0:	bf00      	nop
 80005a2:	46bd      	mov	sp, r7
 80005a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005a8:	4770      	bx	lr
 80005aa:	bf00      	nop
 80005ac:	40023800 	.word	0x40023800
 80005b0:	40040000 	.word	0x40040000
 80005b4:	40040800 	.word	0x40040800
 80005b8:	80043818 	.word	0x80043818

080005bc <connect>:

void connect()
{
 80005bc:	b480      	push	{r7}
 80005be:	af00      	add	r7, sp, #0
	//Power the transceivers on
	SET_BIT(USB_OTG_HS->GCCFG, USB_OTG_GCCFG_PWRDWN);
 80005c0:	4b08      	ldr	r3, [pc, #32]	; (80005e4 <connect+0x28>)
 80005c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80005c4:	4a07      	ldr	r2, [pc, #28]	; (80005e4 <connect+0x28>)
 80005c6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80005ca:	6393      	str	r3, [r2, #56]	; 0x38

	//Connect the device to bus
	CLEAR_BIT(USB_OTG_HS_DEVICE->DCTL, USB_OTG_DCTL_SDIS); //soft-connect
 80005cc:	4b06      	ldr	r3, [pc, #24]	; (80005e8 <connect+0x2c>)
 80005ce:	685b      	ldr	r3, [r3, #4]
 80005d0:	4a05      	ldr	r2, [pc, #20]	; (80005e8 <connect+0x2c>)
 80005d2:	f023 0302 	bic.w	r3, r3, #2
 80005d6:	6053      	str	r3, [r2, #4]
}
 80005d8:	bf00      	nop
 80005da:	46bd      	mov	sp, r7
 80005dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005e0:	4770      	bx	lr
 80005e2:	bf00      	nop
 80005e4:	40040000 	.word	0x40040000
 80005e8:	40040800 	.word	0x40040800

080005ec <usbd_initialize>:
#include "usbd_framework.h"

void usbd_initialize()
{
 80005ec:	b580      	push	{r7, lr}
 80005ee:	af00      	add	r7, sp, #0
	initialize_gpio_pins();
 80005f0:	f7ff ff84 	bl	80004fc <initialize_gpio_pins>
	initialize_core();
 80005f4:	f7ff ffa4 	bl	8000540 <initialize_core>
	connect();
 80005f8:	f7ff ffe0 	bl	80005bc <connect>
}
 80005fc:	bf00      	nop
 80005fe:	bd80      	pop	{r7, pc}

08000600 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000600:	480d      	ldr	r0, [pc, #52]	; (8000638 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000602:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000604:	f7ff ff72 	bl	80004ec <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000608:	480c      	ldr	r0, [pc, #48]	; (800063c <LoopForever+0x6>)
  ldr r1, =_edata
 800060a:	490d      	ldr	r1, [pc, #52]	; (8000640 <LoopForever+0xa>)
  ldr r2, =_sidata
 800060c:	4a0d      	ldr	r2, [pc, #52]	; (8000644 <LoopForever+0xe>)
  movs r3, #0
 800060e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000610:	e002      	b.n	8000618 <LoopCopyDataInit>

08000612 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000612:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000614:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000616:	3304      	adds	r3, #4

08000618 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000618:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800061a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800061c:	d3f9      	bcc.n	8000612 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800061e:	4a0a      	ldr	r2, [pc, #40]	; (8000648 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000620:	4c0a      	ldr	r4, [pc, #40]	; (800064c <LoopForever+0x16>)
  movs r3, #0
 8000622:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000624:	e001      	b.n	800062a <LoopFillZerobss>

08000626 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000626:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000628:	3204      	adds	r2, #4

0800062a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800062a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800062c:	d3fb      	bcc.n	8000626 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800062e:	f000 f811 	bl	8000654 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000632:	f7ff fed1 	bl	80003d8 <main>

08000636 <LoopForever>:

LoopForever:
    b LoopForever
 8000636:	e7fe      	b.n	8000636 <LoopForever>
  ldr   r0, =_estack
 8000638:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 800063c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000640:	20000068 	.word	0x20000068
  ldr r2, =_sidata
 8000644:	08001694 	.word	0x08001694
  ldr r2, =_sbss
 8000648:	20000068 	.word	0x20000068
  ldr r4, =_ebss
 800064c:	20000094 	.word	0x20000094

08000650 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000650:	e7fe      	b.n	8000650 <ADC_IRQHandler>
	...

08000654 <__libc_init_array>:
 8000654:	b570      	push	{r4, r5, r6, lr}
 8000656:	4e0d      	ldr	r6, [pc, #52]	; (800068c <__libc_init_array+0x38>)
 8000658:	4c0d      	ldr	r4, [pc, #52]	; (8000690 <__libc_init_array+0x3c>)
 800065a:	1ba4      	subs	r4, r4, r6
 800065c:	10a4      	asrs	r4, r4, #2
 800065e:	2500      	movs	r5, #0
 8000660:	42a5      	cmp	r5, r4
 8000662:	d109      	bne.n	8000678 <__libc_init_array+0x24>
 8000664:	4e0b      	ldr	r6, [pc, #44]	; (8000694 <__libc_init_array+0x40>)
 8000666:	4c0c      	ldr	r4, [pc, #48]	; (8000698 <__libc_init_array+0x44>)
 8000668:	f000 ff8e 	bl	8001588 <_init>
 800066c:	1ba4      	subs	r4, r4, r6
 800066e:	10a4      	asrs	r4, r4, #2
 8000670:	2500      	movs	r5, #0
 8000672:	42a5      	cmp	r5, r4
 8000674:	d105      	bne.n	8000682 <__libc_init_array+0x2e>
 8000676:	bd70      	pop	{r4, r5, r6, pc}
 8000678:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800067c:	4798      	blx	r3
 800067e:	3501      	adds	r5, #1
 8000680:	e7ee      	b.n	8000660 <__libc_init_array+0xc>
 8000682:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000686:	4798      	blx	r3
 8000688:	3501      	adds	r5, #1
 800068a:	e7f2      	b.n	8000672 <__libc_init_array+0x1e>
 800068c:	0800168c 	.word	0x0800168c
 8000690:	0800168c 	.word	0x0800168c
 8000694:	0800168c 	.word	0x0800168c
 8000698:	08001690 	.word	0x08001690

0800069c <memset>:
 800069c:	4402      	add	r2, r0
 800069e:	4603      	mov	r3, r0
 80006a0:	4293      	cmp	r3, r2
 80006a2:	d100      	bne.n	80006a6 <memset+0xa>
 80006a4:	4770      	bx	lr
 80006a6:	f803 1b01 	strb.w	r1, [r3], #1
 80006aa:	e7f9      	b.n	80006a0 <memset+0x4>

080006ac <__sfputc_r>:
 80006ac:	6893      	ldr	r3, [r2, #8]
 80006ae:	3b01      	subs	r3, #1
 80006b0:	2b00      	cmp	r3, #0
 80006b2:	b410      	push	{r4}
 80006b4:	6093      	str	r3, [r2, #8]
 80006b6:	da08      	bge.n	80006ca <__sfputc_r+0x1e>
 80006b8:	6994      	ldr	r4, [r2, #24]
 80006ba:	42a3      	cmp	r3, r4
 80006bc:	db01      	blt.n	80006c2 <__sfputc_r+0x16>
 80006be:	290a      	cmp	r1, #10
 80006c0:	d103      	bne.n	80006ca <__sfputc_r+0x1e>
 80006c2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80006c6:	f000 baef 	b.w	8000ca8 <__swbuf_r>
 80006ca:	6813      	ldr	r3, [r2, #0]
 80006cc:	1c58      	adds	r0, r3, #1
 80006ce:	6010      	str	r0, [r2, #0]
 80006d0:	7019      	strb	r1, [r3, #0]
 80006d2:	4608      	mov	r0, r1
 80006d4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80006d8:	4770      	bx	lr

080006da <__sfputs_r>:
 80006da:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006dc:	4606      	mov	r6, r0
 80006de:	460f      	mov	r7, r1
 80006e0:	4614      	mov	r4, r2
 80006e2:	18d5      	adds	r5, r2, r3
 80006e4:	42ac      	cmp	r4, r5
 80006e6:	d101      	bne.n	80006ec <__sfputs_r+0x12>
 80006e8:	2000      	movs	r0, #0
 80006ea:	e007      	b.n	80006fc <__sfputs_r+0x22>
 80006ec:	463a      	mov	r2, r7
 80006ee:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006f2:	4630      	mov	r0, r6
 80006f4:	f7ff ffda 	bl	80006ac <__sfputc_r>
 80006f8:	1c43      	adds	r3, r0, #1
 80006fa:	d1f3      	bne.n	80006e4 <__sfputs_r+0xa>
 80006fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000700 <_vfiprintf_r>:
 8000700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000704:	460c      	mov	r4, r1
 8000706:	b09d      	sub	sp, #116	; 0x74
 8000708:	4617      	mov	r7, r2
 800070a:	461d      	mov	r5, r3
 800070c:	4606      	mov	r6, r0
 800070e:	b118      	cbz	r0, 8000718 <_vfiprintf_r+0x18>
 8000710:	6983      	ldr	r3, [r0, #24]
 8000712:	b90b      	cbnz	r3, 8000718 <_vfiprintf_r+0x18>
 8000714:	f000 fc78 	bl	8001008 <__sinit>
 8000718:	4b7c      	ldr	r3, [pc, #496]	; (800090c <_vfiprintf_r+0x20c>)
 800071a:	429c      	cmp	r4, r3
 800071c:	d158      	bne.n	80007d0 <_vfiprintf_r+0xd0>
 800071e:	6874      	ldr	r4, [r6, #4]
 8000720:	89a3      	ldrh	r3, [r4, #12]
 8000722:	0718      	lsls	r0, r3, #28
 8000724:	d55e      	bpl.n	80007e4 <_vfiprintf_r+0xe4>
 8000726:	6923      	ldr	r3, [r4, #16]
 8000728:	2b00      	cmp	r3, #0
 800072a:	d05b      	beq.n	80007e4 <_vfiprintf_r+0xe4>
 800072c:	2300      	movs	r3, #0
 800072e:	9309      	str	r3, [sp, #36]	; 0x24
 8000730:	2320      	movs	r3, #32
 8000732:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000736:	2330      	movs	r3, #48	; 0x30
 8000738:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800073c:	9503      	str	r5, [sp, #12]
 800073e:	f04f 0b01 	mov.w	fp, #1
 8000742:	46b8      	mov	r8, r7
 8000744:	4645      	mov	r5, r8
 8000746:	f815 3b01 	ldrb.w	r3, [r5], #1
 800074a:	b10b      	cbz	r3, 8000750 <_vfiprintf_r+0x50>
 800074c:	2b25      	cmp	r3, #37	; 0x25
 800074e:	d154      	bne.n	80007fa <_vfiprintf_r+0xfa>
 8000750:	ebb8 0a07 	subs.w	sl, r8, r7
 8000754:	d00b      	beq.n	800076e <_vfiprintf_r+0x6e>
 8000756:	4653      	mov	r3, sl
 8000758:	463a      	mov	r2, r7
 800075a:	4621      	mov	r1, r4
 800075c:	4630      	mov	r0, r6
 800075e:	f7ff ffbc 	bl	80006da <__sfputs_r>
 8000762:	3001      	adds	r0, #1
 8000764:	f000 80c2 	beq.w	80008ec <_vfiprintf_r+0x1ec>
 8000768:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800076a:	4453      	add	r3, sl
 800076c:	9309      	str	r3, [sp, #36]	; 0x24
 800076e:	f898 3000 	ldrb.w	r3, [r8]
 8000772:	2b00      	cmp	r3, #0
 8000774:	f000 80ba 	beq.w	80008ec <_vfiprintf_r+0x1ec>
 8000778:	2300      	movs	r3, #0
 800077a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800077e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000782:	9304      	str	r3, [sp, #16]
 8000784:	9307      	str	r3, [sp, #28]
 8000786:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800078a:	931a      	str	r3, [sp, #104]	; 0x68
 800078c:	46a8      	mov	r8, r5
 800078e:	2205      	movs	r2, #5
 8000790:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000794:	485e      	ldr	r0, [pc, #376]	; (8000910 <_vfiprintf_r+0x210>)
 8000796:	f7ff fd2b 	bl	80001f0 <memchr>
 800079a:	9b04      	ldr	r3, [sp, #16]
 800079c:	bb78      	cbnz	r0, 80007fe <_vfiprintf_r+0xfe>
 800079e:	06d9      	lsls	r1, r3, #27
 80007a0:	bf44      	itt	mi
 80007a2:	2220      	movmi	r2, #32
 80007a4:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80007a8:	071a      	lsls	r2, r3, #28
 80007aa:	bf44      	itt	mi
 80007ac:	222b      	movmi	r2, #43	; 0x2b
 80007ae:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80007b2:	782a      	ldrb	r2, [r5, #0]
 80007b4:	2a2a      	cmp	r2, #42	; 0x2a
 80007b6:	d02a      	beq.n	800080e <_vfiprintf_r+0x10e>
 80007b8:	9a07      	ldr	r2, [sp, #28]
 80007ba:	46a8      	mov	r8, r5
 80007bc:	2000      	movs	r0, #0
 80007be:	250a      	movs	r5, #10
 80007c0:	4641      	mov	r1, r8
 80007c2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80007c6:	3b30      	subs	r3, #48	; 0x30
 80007c8:	2b09      	cmp	r3, #9
 80007ca:	d969      	bls.n	80008a0 <_vfiprintf_r+0x1a0>
 80007cc:	b360      	cbz	r0, 8000828 <_vfiprintf_r+0x128>
 80007ce:	e024      	b.n	800081a <_vfiprintf_r+0x11a>
 80007d0:	4b50      	ldr	r3, [pc, #320]	; (8000914 <_vfiprintf_r+0x214>)
 80007d2:	429c      	cmp	r4, r3
 80007d4:	d101      	bne.n	80007da <_vfiprintf_r+0xda>
 80007d6:	68b4      	ldr	r4, [r6, #8]
 80007d8:	e7a2      	b.n	8000720 <_vfiprintf_r+0x20>
 80007da:	4b4f      	ldr	r3, [pc, #316]	; (8000918 <_vfiprintf_r+0x218>)
 80007dc:	429c      	cmp	r4, r3
 80007de:	bf08      	it	eq
 80007e0:	68f4      	ldreq	r4, [r6, #12]
 80007e2:	e79d      	b.n	8000720 <_vfiprintf_r+0x20>
 80007e4:	4621      	mov	r1, r4
 80007e6:	4630      	mov	r0, r6
 80007e8:	f000 fab0 	bl	8000d4c <__swsetup_r>
 80007ec:	2800      	cmp	r0, #0
 80007ee:	d09d      	beq.n	800072c <_vfiprintf_r+0x2c>
 80007f0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80007f4:	b01d      	add	sp, #116	; 0x74
 80007f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80007fa:	46a8      	mov	r8, r5
 80007fc:	e7a2      	b.n	8000744 <_vfiprintf_r+0x44>
 80007fe:	4a44      	ldr	r2, [pc, #272]	; (8000910 <_vfiprintf_r+0x210>)
 8000800:	1a80      	subs	r0, r0, r2
 8000802:	fa0b f000 	lsl.w	r0, fp, r0
 8000806:	4318      	orrs	r0, r3
 8000808:	9004      	str	r0, [sp, #16]
 800080a:	4645      	mov	r5, r8
 800080c:	e7be      	b.n	800078c <_vfiprintf_r+0x8c>
 800080e:	9a03      	ldr	r2, [sp, #12]
 8000810:	1d11      	adds	r1, r2, #4
 8000812:	6812      	ldr	r2, [r2, #0]
 8000814:	9103      	str	r1, [sp, #12]
 8000816:	2a00      	cmp	r2, #0
 8000818:	db01      	blt.n	800081e <_vfiprintf_r+0x11e>
 800081a:	9207      	str	r2, [sp, #28]
 800081c:	e004      	b.n	8000828 <_vfiprintf_r+0x128>
 800081e:	4252      	negs	r2, r2
 8000820:	f043 0302 	orr.w	r3, r3, #2
 8000824:	9207      	str	r2, [sp, #28]
 8000826:	9304      	str	r3, [sp, #16]
 8000828:	f898 3000 	ldrb.w	r3, [r8]
 800082c:	2b2e      	cmp	r3, #46	; 0x2e
 800082e:	d10e      	bne.n	800084e <_vfiprintf_r+0x14e>
 8000830:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000834:	2b2a      	cmp	r3, #42	; 0x2a
 8000836:	d138      	bne.n	80008aa <_vfiprintf_r+0x1aa>
 8000838:	9b03      	ldr	r3, [sp, #12]
 800083a:	1d1a      	adds	r2, r3, #4
 800083c:	681b      	ldr	r3, [r3, #0]
 800083e:	9203      	str	r2, [sp, #12]
 8000840:	2b00      	cmp	r3, #0
 8000842:	bfb8      	it	lt
 8000844:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000848:	f108 0802 	add.w	r8, r8, #2
 800084c:	9305      	str	r3, [sp, #20]
 800084e:	4d33      	ldr	r5, [pc, #204]	; (800091c <_vfiprintf_r+0x21c>)
 8000850:	f898 1000 	ldrb.w	r1, [r8]
 8000854:	2203      	movs	r2, #3
 8000856:	4628      	mov	r0, r5
 8000858:	f7ff fcca 	bl	80001f0 <memchr>
 800085c:	b140      	cbz	r0, 8000870 <_vfiprintf_r+0x170>
 800085e:	2340      	movs	r3, #64	; 0x40
 8000860:	1b40      	subs	r0, r0, r5
 8000862:	fa03 f000 	lsl.w	r0, r3, r0
 8000866:	9b04      	ldr	r3, [sp, #16]
 8000868:	4303      	orrs	r3, r0
 800086a:	f108 0801 	add.w	r8, r8, #1
 800086e:	9304      	str	r3, [sp, #16]
 8000870:	f898 1000 	ldrb.w	r1, [r8]
 8000874:	482a      	ldr	r0, [pc, #168]	; (8000920 <_vfiprintf_r+0x220>)
 8000876:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800087a:	2206      	movs	r2, #6
 800087c:	f108 0701 	add.w	r7, r8, #1
 8000880:	f7ff fcb6 	bl	80001f0 <memchr>
 8000884:	2800      	cmp	r0, #0
 8000886:	d037      	beq.n	80008f8 <_vfiprintf_r+0x1f8>
 8000888:	4b26      	ldr	r3, [pc, #152]	; (8000924 <_vfiprintf_r+0x224>)
 800088a:	bb1b      	cbnz	r3, 80008d4 <_vfiprintf_r+0x1d4>
 800088c:	9b03      	ldr	r3, [sp, #12]
 800088e:	3307      	adds	r3, #7
 8000890:	f023 0307 	bic.w	r3, r3, #7
 8000894:	3308      	adds	r3, #8
 8000896:	9303      	str	r3, [sp, #12]
 8000898:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800089a:	444b      	add	r3, r9
 800089c:	9309      	str	r3, [sp, #36]	; 0x24
 800089e:	e750      	b.n	8000742 <_vfiprintf_r+0x42>
 80008a0:	fb05 3202 	mla	r2, r5, r2, r3
 80008a4:	2001      	movs	r0, #1
 80008a6:	4688      	mov	r8, r1
 80008a8:	e78a      	b.n	80007c0 <_vfiprintf_r+0xc0>
 80008aa:	2300      	movs	r3, #0
 80008ac:	f108 0801 	add.w	r8, r8, #1
 80008b0:	9305      	str	r3, [sp, #20]
 80008b2:	4619      	mov	r1, r3
 80008b4:	250a      	movs	r5, #10
 80008b6:	4640      	mov	r0, r8
 80008b8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80008bc:	3a30      	subs	r2, #48	; 0x30
 80008be:	2a09      	cmp	r2, #9
 80008c0:	d903      	bls.n	80008ca <_vfiprintf_r+0x1ca>
 80008c2:	2b00      	cmp	r3, #0
 80008c4:	d0c3      	beq.n	800084e <_vfiprintf_r+0x14e>
 80008c6:	9105      	str	r1, [sp, #20]
 80008c8:	e7c1      	b.n	800084e <_vfiprintf_r+0x14e>
 80008ca:	fb05 2101 	mla	r1, r5, r1, r2
 80008ce:	2301      	movs	r3, #1
 80008d0:	4680      	mov	r8, r0
 80008d2:	e7f0      	b.n	80008b6 <_vfiprintf_r+0x1b6>
 80008d4:	ab03      	add	r3, sp, #12
 80008d6:	9300      	str	r3, [sp, #0]
 80008d8:	4622      	mov	r2, r4
 80008da:	4b13      	ldr	r3, [pc, #76]	; (8000928 <_vfiprintf_r+0x228>)
 80008dc:	a904      	add	r1, sp, #16
 80008de:	4630      	mov	r0, r6
 80008e0:	f3af 8000 	nop.w
 80008e4:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 80008e8:	4681      	mov	r9, r0
 80008ea:	d1d5      	bne.n	8000898 <_vfiprintf_r+0x198>
 80008ec:	89a3      	ldrh	r3, [r4, #12]
 80008ee:	065b      	lsls	r3, r3, #25
 80008f0:	f53f af7e 	bmi.w	80007f0 <_vfiprintf_r+0xf0>
 80008f4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80008f6:	e77d      	b.n	80007f4 <_vfiprintf_r+0xf4>
 80008f8:	ab03      	add	r3, sp, #12
 80008fa:	9300      	str	r3, [sp, #0]
 80008fc:	4622      	mov	r2, r4
 80008fe:	4b0a      	ldr	r3, [pc, #40]	; (8000928 <_vfiprintf_r+0x228>)
 8000900:	a904      	add	r1, sp, #16
 8000902:	4630      	mov	r0, r6
 8000904:	f000 f892 	bl	8000a2c <_printf_i>
 8000908:	e7ec      	b.n	80008e4 <_vfiprintf_r+0x1e4>
 800090a:	bf00      	nop
 800090c:	0800164c 	.word	0x0800164c
 8000910:	080015f8 	.word	0x080015f8
 8000914:	0800166c 	.word	0x0800166c
 8000918:	0800162c 	.word	0x0800162c
 800091c:	080015fe 	.word	0x080015fe
 8000920:	08001602 	.word	0x08001602
 8000924:	00000000 	.word	0x00000000
 8000928:	080006db 	.word	0x080006db

0800092c <vfiprintf>:
 800092c:	4613      	mov	r3, r2
 800092e:	460a      	mov	r2, r1
 8000930:	4601      	mov	r1, r0
 8000932:	4802      	ldr	r0, [pc, #8]	; (800093c <vfiprintf+0x10>)
 8000934:	6800      	ldr	r0, [r0, #0]
 8000936:	f7ff bee3 	b.w	8000700 <_vfiprintf_r>
 800093a:	bf00      	nop
 800093c:	20000004 	.word	0x20000004

08000940 <_printf_common>:
 8000940:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000944:	4691      	mov	r9, r2
 8000946:	461f      	mov	r7, r3
 8000948:	688a      	ldr	r2, [r1, #8]
 800094a:	690b      	ldr	r3, [r1, #16]
 800094c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000950:	4293      	cmp	r3, r2
 8000952:	bfb8      	it	lt
 8000954:	4613      	movlt	r3, r2
 8000956:	f8c9 3000 	str.w	r3, [r9]
 800095a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800095e:	4606      	mov	r6, r0
 8000960:	460c      	mov	r4, r1
 8000962:	b112      	cbz	r2, 800096a <_printf_common+0x2a>
 8000964:	3301      	adds	r3, #1
 8000966:	f8c9 3000 	str.w	r3, [r9]
 800096a:	6823      	ldr	r3, [r4, #0]
 800096c:	0699      	lsls	r1, r3, #26
 800096e:	bf42      	ittt	mi
 8000970:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000974:	3302      	addmi	r3, #2
 8000976:	f8c9 3000 	strmi.w	r3, [r9]
 800097a:	6825      	ldr	r5, [r4, #0]
 800097c:	f015 0506 	ands.w	r5, r5, #6
 8000980:	d107      	bne.n	8000992 <_printf_common+0x52>
 8000982:	f104 0a19 	add.w	sl, r4, #25
 8000986:	68e3      	ldr	r3, [r4, #12]
 8000988:	f8d9 2000 	ldr.w	r2, [r9]
 800098c:	1a9b      	subs	r3, r3, r2
 800098e:	42ab      	cmp	r3, r5
 8000990:	dc28      	bgt.n	80009e4 <_printf_common+0xa4>
 8000992:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000996:	6822      	ldr	r2, [r4, #0]
 8000998:	3300      	adds	r3, #0
 800099a:	bf18      	it	ne
 800099c:	2301      	movne	r3, #1
 800099e:	0692      	lsls	r2, r2, #26
 80009a0:	d42d      	bmi.n	80009fe <_printf_common+0xbe>
 80009a2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80009a6:	4639      	mov	r1, r7
 80009a8:	4630      	mov	r0, r6
 80009aa:	47c0      	blx	r8
 80009ac:	3001      	adds	r0, #1
 80009ae:	d020      	beq.n	80009f2 <_printf_common+0xb2>
 80009b0:	6823      	ldr	r3, [r4, #0]
 80009b2:	68e5      	ldr	r5, [r4, #12]
 80009b4:	f8d9 2000 	ldr.w	r2, [r9]
 80009b8:	f003 0306 	and.w	r3, r3, #6
 80009bc:	2b04      	cmp	r3, #4
 80009be:	bf08      	it	eq
 80009c0:	1aad      	subeq	r5, r5, r2
 80009c2:	68a3      	ldr	r3, [r4, #8]
 80009c4:	6922      	ldr	r2, [r4, #16]
 80009c6:	bf0c      	ite	eq
 80009c8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80009cc:	2500      	movne	r5, #0
 80009ce:	4293      	cmp	r3, r2
 80009d0:	bfc4      	itt	gt
 80009d2:	1a9b      	subgt	r3, r3, r2
 80009d4:	18ed      	addgt	r5, r5, r3
 80009d6:	f04f 0900 	mov.w	r9, #0
 80009da:	341a      	adds	r4, #26
 80009dc:	454d      	cmp	r5, r9
 80009de:	d11a      	bne.n	8000a16 <_printf_common+0xd6>
 80009e0:	2000      	movs	r0, #0
 80009e2:	e008      	b.n	80009f6 <_printf_common+0xb6>
 80009e4:	2301      	movs	r3, #1
 80009e6:	4652      	mov	r2, sl
 80009e8:	4639      	mov	r1, r7
 80009ea:	4630      	mov	r0, r6
 80009ec:	47c0      	blx	r8
 80009ee:	3001      	adds	r0, #1
 80009f0:	d103      	bne.n	80009fa <_printf_common+0xba>
 80009f2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80009f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009fa:	3501      	adds	r5, #1
 80009fc:	e7c3      	b.n	8000986 <_printf_common+0x46>
 80009fe:	18e1      	adds	r1, r4, r3
 8000a00:	1c5a      	adds	r2, r3, #1
 8000a02:	2030      	movs	r0, #48	; 0x30
 8000a04:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000a08:	4422      	add	r2, r4
 8000a0a:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000a0e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000a12:	3302      	adds	r3, #2
 8000a14:	e7c5      	b.n	80009a2 <_printf_common+0x62>
 8000a16:	2301      	movs	r3, #1
 8000a18:	4622      	mov	r2, r4
 8000a1a:	4639      	mov	r1, r7
 8000a1c:	4630      	mov	r0, r6
 8000a1e:	47c0      	blx	r8
 8000a20:	3001      	adds	r0, #1
 8000a22:	d0e6      	beq.n	80009f2 <_printf_common+0xb2>
 8000a24:	f109 0901 	add.w	r9, r9, #1
 8000a28:	e7d8      	b.n	80009dc <_printf_common+0x9c>
	...

08000a2c <_printf_i>:
 8000a2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000a30:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8000a34:	460c      	mov	r4, r1
 8000a36:	7e09      	ldrb	r1, [r1, #24]
 8000a38:	b085      	sub	sp, #20
 8000a3a:	296e      	cmp	r1, #110	; 0x6e
 8000a3c:	4617      	mov	r7, r2
 8000a3e:	4606      	mov	r6, r0
 8000a40:	4698      	mov	r8, r3
 8000a42:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8000a44:	f000 80b3 	beq.w	8000bae <_printf_i+0x182>
 8000a48:	d822      	bhi.n	8000a90 <_printf_i+0x64>
 8000a4a:	2963      	cmp	r1, #99	; 0x63
 8000a4c:	d036      	beq.n	8000abc <_printf_i+0x90>
 8000a4e:	d80a      	bhi.n	8000a66 <_printf_i+0x3a>
 8000a50:	2900      	cmp	r1, #0
 8000a52:	f000 80b9 	beq.w	8000bc8 <_printf_i+0x19c>
 8000a56:	2958      	cmp	r1, #88	; 0x58
 8000a58:	f000 8083 	beq.w	8000b62 <_printf_i+0x136>
 8000a5c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000a60:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8000a64:	e032      	b.n	8000acc <_printf_i+0xa0>
 8000a66:	2964      	cmp	r1, #100	; 0x64
 8000a68:	d001      	beq.n	8000a6e <_printf_i+0x42>
 8000a6a:	2969      	cmp	r1, #105	; 0x69
 8000a6c:	d1f6      	bne.n	8000a5c <_printf_i+0x30>
 8000a6e:	6820      	ldr	r0, [r4, #0]
 8000a70:	6813      	ldr	r3, [r2, #0]
 8000a72:	0605      	lsls	r5, r0, #24
 8000a74:	f103 0104 	add.w	r1, r3, #4
 8000a78:	d52a      	bpl.n	8000ad0 <_printf_i+0xa4>
 8000a7a:	681b      	ldr	r3, [r3, #0]
 8000a7c:	6011      	str	r1, [r2, #0]
 8000a7e:	2b00      	cmp	r3, #0
 8000a80:	da03      	bge.n	8000a8a <_printf_i+0x5e>
 8000a82:	222d      	movs	r2, #45	; 0x2d
 8000a84:	425b      	negs	r3, r3
 8000a86:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8000a8a:	486f      	ldr	r0, [pc, #444]	; (8000c48 <_printf_i+0x21c>)
 8000a8c:	220a      	movs	r2, #10
 8000a8e:	e039      	b.n	8000b04 <_printf_i+0xd8>
 8000a90:	2973      	cmp	r1, #115	; 0x73
 8000a92:	f000 809d 	beq.w	8000bd0 <_printf_i+0x1a4>
 8000a96:	d808      	bhi.n	8000aaa <_printf_i+0x7e>
 8000a98:	296f      	cmp	r1, #111	; 0x6f
 8000a9a:	d020      	beq.n	8000ade <_printf_i+0xb2>
 8000a9c:	2970      	cmp	r1, #112	; 0x70
 8000a9e:	d1dd      	bne.n	8000a5c <_printf_i+0x30>
 8000aa0:	6823      	ldr	r3, [r4, #0]
 8000aa2:	f043 0320 	orr.w	r3, r3, #32
 8000aa6:	6023      	str	r3, [r4, #0]
 8000aa8:	e003      	b.n	8000ab2 <_printf_i+0x86>
 8000aaa:	2975      	cmp	r1, #117	; 0x75
 8000aac:	d017      	beq.n	8000ade <_printf_i+0xb2>
 8000aae:	2978      	cmp	r1, #120	; 0x78
 8000ab0:	d1d4      	bne.n	8000a5c <_printf_i+0x30>
 8000ab2:	2378      	movs	r3, #120	; 0x78
 8000ab4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000ab8:	4864      	ldr	r0, [pc, #400]	; (8000c4c <_printf_i+0x220>)
 8000aba:	e055      	b.n	8000b68 <_printf_i+0x13c>
 8000abc:	6813      	ldr	r3, [r2, #0]
 8000abe:	1d19      	adds	r1, r3, #4
 8000ac0:	681b      	ldr	r3, [r3, #0]
 8000ac2:	6011      	str	r1, [r2, #0]
 8000ac4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000ac8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000acc:	2301      	movs	r3, #1
 8000ace:	e08c      	b.n	8000bea <_printf_i+0x1be>
 8000ad0:	681b      	ldr	r3, [r3, #0]
 8000ad2:	6011      	str	r1, [r2, #0]
 8000ad4:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000ad8:	bf18      	it	ne
 8000ada:	b21b      	sxthne	r3, r3
 8000adc:	e7cf      	b.n	8000a7e <_printf_i+0x52>
 8000ade:	6813      	ldr	r3, [r2, #0]
 8000ae0:	6825      	ldr	r5, [r4, #0]
 8000ae2:	1d18      	adds	r0, r3, #4
 8000ae4:	6010      	str	r0, [r2, #0]
 8000ae6:	0628      	lsls	r0, r5, #24
 8000ae8:	d501      	bpl.n	8000aee <_printf_i+0xc2>
 8000aea:	681b      	ldr	r3, [r3, #0]
 8000aec:	e002      	b.n	8000af4 <_printf_i+0xc8>
 8000aee:	0668      	lsls	r0, r5, #25
 8000af0:	d5fb      	bpl.n	8000aea <_printf_i+0xbe>
 8000af2:	881b      	ldrh	r3, [r3, #0]
 8000af4:	4854      	ldr	r0, [pc, #336]	; (8000c48 <_printf_i+0x21c>)
 8000af6:	296f      	cmp	r1, #111	; 0x6f
 8000af8:	bf14      	ite	ne
 8000afa:	220a      	movne	r2, #10
 8000afc:	2208      	moveq	r2, #8
 8000afe:	2100      	movs	r1, #0
 8000b00:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000b04:	6865      	ldr	r5, [r4, #4]
 8000b06:	60a5      	str	r5, [r4, #8]
 8000b08:	2d00      	cmp	r5, #0
 8000b0a:	f2c0 8095 	blt.w	8000c38 <_printf_i+0x20c>
 8000b0e:	6821      	ldr	r1, [r4, #0]
 8000b10:	f021 0104 	bic.w	r1, r1, #4
 8000b14:	6021      	str	r1, [r4, #0]
 8000b16:	2b00      	cmp	r3, #0
 8000b18:	d13d      	bne.n	8000b96 <_printf_i+0x16a>
 8000b1a:	2d00      	cmp	r5, #0
 8000b1c:	f040 808e 	bne.w	8000c3c <_printf_i+0x210>
 8000b20:	4665      	mov	r5, ip
 8000b22:	2a08      	cmp	r2, #8
 8000b24:	d10b      	bne.n	8000b3e <_printf_i+0x112>
 8000b26:	6823      	ldr	r3, [r4, #0]
 8000b28:	07db      	lsls	r3, r3, #31
 8000b2a:	d508      	bpl.n	8000b3e <_printf_i+0x112>
 8000b2c:	6923      	ldr	r3, [r4, #16]
 8000b2e:	6862      	ldr	r2, [r4, #4]
 8000b30:	429a      	cmp	r2, r3
 8000b32:	bfde      	ittt	le
 8000b34:	2330      	movle	r3, #48	; 0x30
 8000b36:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000b3a:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8000b3e:	ebac 0305 	sub.w	r3, ip, r5
 8000b42:	6123      	str	r3, [r4, #16]
 8000b44:	f8cd 8000 	str.w	r8, [sp]
 8000b48:	463b      	mov	r3, r7
 8000b4a:	aa03      	add	r2, sp, #12
 8000b4c:	4621      	mov	r1, r4
 8000b4e:	4630      	mov	r0, r6
 8000b50:	f7ff fef6 	bl	8000940 <_printf_common>
 8000b54:	3001      	adds	r0, #1
 8000b56:	d14d      	bne.n	8000bf4 <_printf_i+0x1c8>
 8000b58:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000b5c:	b005      	add	sp, #20
 8000b5e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000b62:	4839      	ldr	r0, [pc, #228]	; (8000c48 <_printf_i+0x21c>)
 8000b64:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8000b68:	6813      	ldr	r3, [r2, #0]
 8000b6a:	6821      	ldr	r1, [r4, #0]
 8000b6c:	1d1d      	adds	r5, r3, #4
 8000b6e:	681b      	ldr	r3, [r3, #0]
 8000b70:	6015      	str	r5, [r2, #0]
 8000b72:	060a      	lsls	r2, r1, #24
 8000b74:	d50b      	bpl.n	8000b8e <_printf_i+0x162>
 8000b76:	07ca      	lsls	r2, r1, #31
 8000b78:	bf44      	itt	mi
 8000b7a:	f041 0120 	orrmi.w	r1, r1, #32
 8000b7e:	6021      	strmi	r1, [r4, #0]
 8000b80:	b91b      	cbnz	r3, 8000b8a <_printf_i+0x15e>
 8000b82:	6822      	ldr	r2, [r4, #0]
 8000b84:	f022 0220 	bic.w	r2, r2, #32
 8000b88:	6022      	str	r2, [r4, #0]
 8000b8a:	2210      	movs	r2, #16
 8000b8c:	e7b7      	b.n	8000afe <_printf_i+0xd2>
 8000b8e:	064d      	lsls	r5, r1, #25
 8000b90:	bf48      	it	mi
 8000b92:	b29b      	uxthmi	r3, r3
 8000b94:	e7ef      	b.n	8000b76 <_printf_i+0x14a>
 8000b96:	4665      	mov	r5, ip
 8000b98:	fbb3 f1f2 	udiv	r1, r3, r2
 8000b9c:	fb02 3311 	mls	r3, r2, r1, r3
 8000ba0:	5cc3      	ldrb	r3, [r0, r3]
 8000ba2:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8000ba6:	460b      	mov	r3, r1
 8000ba8:	2900      	cmp	r1, #0
 8000baa:	d1f5      	bne.n	8000b98 <_printf_i+0x16c>
 8000bac:	e7b9      	b.n	8000b22 <_printf_i+0xf6>
 8000bae:	6813      	ldr	r3, [r2, #0]
 8000bb0:	6825      	ldr	r5, [r4, #0]
 8000bb2:	6961      	ldr	r1, [r4, #20]
 8000bb4:	1d18      	adds	r0, r3, #4
 8000bb6:	6010      	str	r0, [r2, #0]
 8000bb8:	0628      	lsls	r0, r5, #24
 8000bba:	681b      	ldr	r3, [r3, #0]
 8000bbc:	d501      	bpl.n	8000bc2 <_printf_i+0x196>
 8000bbe:	6019      	str	r1, [r3, #0]
 8000bc0:	e002      	b.n	8000bc8 <_printf_i+0x19c>
 8000bc2:	066a      	lsls	r2, r5, #25
 8000bc4:	d5fb      	bpl.n	8000bbe <_printf_i+0x192>
 8000bc6:	8019      	strh	r1, [r3, #0]
 8000bc8:	2300      	movs	r3, #0
 8000bca:	6123      	str	r3, [r4, #16]
 8000bcc:	4665      	mov	r5, ip
 8000bce:	e7b9      	b.n	8000b44 <_printf_i+0x118>
 8000bd0:	6813      	ldr	r3, [r2, #0]
 8000bd2:	1d19      	adds	r1, r3, #4
 8000bd4:	6011      	str	r1, [r2, #0]
 8000bd6:	681d      	ldr	r5, [r3, #0]
 8000bd8:	6862      	ldr	r2, [r4, #4]
 8000bda:	2100      	movs	r1, #0
 8000bdc:	4628      	mov	r0, r5
 8000bde:	f7ff fb07 	bl	80001f0 <memchr>
 8000be2:	b108      	cbz	r0, 8000be8 <_printf_i+0x1bc>
 8000be4:	1b40      	subs	r0, r0, r5
 8000be6:	6060      	str	r0, [r4, #4]
 8000be8:	6863      	ldr	r3, [r4, #4]
 8000bea:	6123      	str	r3, [r4, #16]
 8000bec:	2300      	movs	r3, #0
 8000bee:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000bf2:	e7a7      	b.n	8000b44 <_printf_i+0x118>
 8000bf4:	6923      	ldr	r3, [r4, #16]
 8000bf6:	462a      	mov	r2, r5
 8000bf8:	4639      	mov	r1, r7
 8000bfa:	4630      	mov	r0, r6
 8000bfc:	47c0      	blx	r8
 8000bfe:	3001      	adds	r0, #1
 8000c00:	d0aa      	beq.n	8000b58 <_printf_i+0x12c>
 8000c02:	6823      	ldr	r3, [r4, #0]
 8000c04:	079b      	lsls	r3, r3, #30
 8000c06:	d413      	bmi.n	8000c30 <_printf_i+0x204>
 8000c08:	68e0      	ldr	r0, [r4, #12]
 8000c0a:	9b03      	ldr	r3, [sp, #12]
 8000c0c:	4298      	cmp	r0, r3
 8000c0e:	bfb8      	it	lt
 8000c10:	4618      	movlt	r0, r3
 8000c12:	e7a3      	b.n	8000b5c <_printf_i+0x130>
 8000c14:	2301      	movs	r3, #1
 8000c16:	464a      	mov	r2, r9
 8000c18:	4639      	mov	r1, r7
 8000c1a:	4630      	mov	r0, r6
 8000c1c:	47c0      	blx	r8
 8000c1e:	3001      	adds	r0, #1
 8000c20:	d09a      	beq.n	8000b58 <_printf_i+0x12c>
 8000c22:	3501      	adds	r5, #1
 8000c24:	68e3      	ldr	r3, [r4, #12]
 8000c26:	9a03      	ldr	r2, [sp, #12]
 8000c28:	1a9b      	subs	r3, r3, r2
 8000c2a:	42ab      	cmp	r3, r5
 8000c2c:	dcf2      	bgt.n	8000c14 <_printf_i+0x1e8>
 8000c2e:	e7eb      	b.n	8000c08 <_printf_i+0x1dc>
 8000c30:	2500      	movs	r5, #0
 8000c32:	f104 0919 	add.w	r9, r4, #25
 8000c36:	e7f5      	b.n	8000c24 <_printf_i+0x1f8>
 8000c38:	2b00      	cmp	r3, #0
 8000c3a:	d1ac      	bne.n	8000b96 <_printf_i+0x16a>
 8000c3c:	7803      	ldrb	r3, [r0, #0]
 8000c3e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000c42:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c46:	e76c      	b.n	8000b22 <_printf_i+0xf6>
 8000c48:	08001609 	.word	0x08001609
 8000c4c:	0800161a 	.word	0x0800161a

08000c50 <iprintf>:
 8000c50:	b40f      	push	{r0, r1, r2, r3}
 8000c52:	4b0a      	ldr	r3, [pc, #40]	; (8000c7c <iprintf+0x2c>)
 8000c54:	b513      	push	{r0, r1, r4, lr}
 8000c56:	681c      	ldr	r4, [r3, #0]
 8000c58:	b124      	cbz	r4, 8000c64 <iprintf+0x14>
 8000c5a:	69a3      	ldr	r3, [r4, #24]
 8000c5c:	b913      	cbnz	r3, 8000c64 <iprintf+0x14>
 8000c5e:	4620      	mov	r0, r4
 8000c60:	f000 f9d2 	bl	8001008 <__sinit>
 8000c64:	ab05      	add	r3, sp, #20
 8000c66:	9a04      	ldr	r2, [sp, #16]
 8000c68:	68a1      	ldr	r1, [r4, #8]
 8000c6a:	9301      	str	r3, [sp, #4]
 8000c6c:	4620      	mov	r0, r4
 8000c6e:	f7ff fd47 	bl	8000700 <_vfiprintf_r>
 8000c72:	b002      	add	sp, #8
 8000c74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000c78:	b004      	add	sp, #16
 8000c7a:	4770      	bx	lr
 8000c7c:	20000004 	.word	0x20000004

08000c80 <putchar>:
 8000c80:	b538      	push	{r3, r4, r5, lr}
 8000c82:	4b08      	ldr	r3, [pc, #32]	; (8000ca4 <putchar+0x24>)
 8000c84:	681c      	ldr	r4, [r3, #0]
 8000c86:	4605      	mov	r5, r0
 8000c88:	b124      	cbz	r4, 8000c94 <putchar+0x14>
 8000c8a:	69a3      	ldr	r3, [r4, #24]
 8000c8c:	b913      	cbnz	r3, 8000c94 <putchar+0x14>
 8000c8e:	4620      	mov	r0, r4
 8000c90:	f000 f9ba 	bl	8001008 <__sinit>
 8000c94:	68a2      	ldr	r2, [r4, #8]
 8000c96:	4629      	mov	r1, r5
 8000c98:	4620      	mov	r0, r4
 8000c9a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c9e:	f000 bb49 	b.w	8001334 <_putc_r>
 8000ca2:	bf00      	nop
 8000ca4:	20000004 	.word	0x20000004

08000ca8 <__swbuf_r>:
 8000ca8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000caa:	460e      	mov	r6, r1
 8000cac:	4614      	mov	r4, r2
 8000cae:	4605      	mov	r5, r0
 8000cb0:	b118      	cbz	r0, 8000cba <__swbuf_r+0x12>
 8000cb2:	6983      	ldr	r3, [r0, #24]
 8000cb4:	b90b      	cbnz	r3, 8000cba <__swbuf_r+0x12>
 8000cb6:	f000 f9a7 	bl	8001008 <__sinit>
 8000cba:	4b21      	ldr	r3, [pc, #132]	; (8000d40 <__swbuf_r+0x98>)
 8000cbc:	429c      	cmp	r4, r3
 8000cbe:	d12a      	bne.n	8000d16 <__swbuf_r+0x6e>
 8000cc0:	686c      	ldr	r4, [r5, #4]
 8000cc2:	69a3      	ldr	r3, [r4, #24]
 8000cc4:	60a3      	str	r3, [r4, #8]
 8000cc6:	89a3      	ldrh	r3, [r4, #12]
 8000cc8:	071a      	lsls	r2, r3, #28
 8000cca:	d52e      	bpl.n	8000d2a <__swbuf_r+0x82>
 8000ccc:	6923      	ldr	r3, [r4, #16]
 8000cce:	b363      	cbz	r3, 8000d2a <__swbuf_r+0x82>
 8000cd0:	6923      	ldr	r3, [r4, #16]
 8000cd2:	6820      	ldr	r0, [r4, #0]
 8000cd4:	1ac0      	subs	r0, r0, r3
 8000cd6:	6963      	ldr	r3, [r4, #20]
 8000cd8:	b2f6      	uxtb	r6, r6
 8000cda:	4283      	cmp	r3, r0
 8000cdc:	4637      	mov	r7, r6
 8000cde:	dc04      	bgt.n	8000cea <__swbuf_r+0x42>
 8000ce0:	4621      	mov	r1, r4
 8000ce2:	4628      	mov	r0, r5
 8000ce4:	f000 f926 	bl	8000f34 <_fflush_r>
 8000ce8:	bb28      	cbnz	r0, 8000d36 <__swbuf_r+0x8e>
 8000cea:	68a3      	ldr	r3, [r4, #8]
 8000cec:	3b01      	subs	r3, #1
 8000cee:	60a3      	str	r3, [r4, #8]
 8000cf0:	6823      	ldr	r3, [r4, #0]
 8000cf2:	1c5a      	adds	r2, r3, #1
 8000cf4:	6022      	str	r2, [r4, #0]
 8000cf6:	701e      	strb	r6, [r3, #0]
 8000cf8:	6963      	ldr	r3, [r4, #20]
 8000cfa:	3001      	adds	r0, #1
 8000cfc:	4283      	cmp	r3, r0
 8000cfe:	d004      	beq.n	8000d0a <__swbuf_r+0x62>
 8000d00:	89a3      	ldrh	r3, [r4, #12]
 8000d02:	07db      	lsls	r3, r3, #31
 8000d04:	d519      	bpl.n	8000d3a <__swbuf_r+0x92>
 8000d06:	2e0a      	cmp	r6, #10
 8000d08:	d117      	bne.n	8000d3a <__swbuf_r+0x92>
 8000d0a:	4621      	mov	r1, r4
 8000d0c:	4628      	mov	r0, r5
 8000d0e:	f000 f911 	bl	8000f34 <_fflush_r>
 8000d12:	b190      	cbz	r0, 8000d3a <__swbuf_r+0x92>
 8000d14:	e00f      	b.n	8000d36 <__swbuf_r+0x8e>
 8000d16:	4b0b      	ldr	r3, [pc, #44]	; (8000d44 <__swbuf_r+0x9c>)
 8000d18:	429c      	cmp	r4, r3
 8000d1a:	d101      	bne.n	8000d20 <__swbuf_r+0x78>
 8000d1c:	68ac      	ldr	r4, [r5, #8]
 8000d1e:	e7d0      	b.n	8000cc2 <__swbuf_r+0x1a>
 8000d20:	4b09      	ldr	r3, [pc, #36]	; (8000d48 <__swbuf_r+0xa0>)
 8000d22:	429c      	cmp	r4, r3
 8000d24:	bf08      	it	eq
 8000d26:	68ec      	ldreq	r4, [r5, #12]
 8000d28:	e7cb      	b.n	8000cc2 <__swbuf_r+0x1a>
 8000d2a:	4621      	mov	r1, r4
 8000d2c:	4628      	mov	r0, r5
 8000d2e:	f000 f80d 	bl	8000d4c <__swsetup_r>
 8000d32:	2800      	cmp	r0, #0
 8000d34:	d0cc      	beq.n	8000cd0 <__swbuf_r+0x28>
 8000d36:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000d3a:	4638      	mov	r0, r7
 8000d3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d3e:	bf00      	nop
 8000d40:	0800164c 	.word	0x0800164c
 8000d44:	0800166c 	.word	0x0800166c
 8000d48:	0800162c 	.word	0x0800162c

08000d4c <__swsetup_r>:
 8000d4c:	4b32      	ldr	r3, [pc, #200]	; (8000e18 <__swsetup_r+0xcc>)
 8000d4e:	b570      	push	{r4, r5, r6, lr}
 8000d50:	681d      	ldr	r5, [r3, #0]
 8000d52:	4606      	mov	r6, r0
 8000d54:	460c      	mov	r4, r1
 8000d56:	b125      	cbz	r5, 8000d62 <__swsetup_r+0x16>
 8000d58:	69ab      	ldr	r3, [r5, #24]
 8000d5a:	b913      	cbnz	r3, 8000d62 <__swsetup_r+0x16>
 8000d5c:	4628      	mov	r0, r5
 8000d5e:	f000 f953 	bl	8001008 <__sinit>
 8000d62:	4b2e      	ldr	r3, [pc, #184]	; (8000e1c <__swsetup_r+0xd0>)
 8000d64:	429c      	cmp	r4, r3
 8000d66:	d10f      	bne.n	8000d88 <__swsetup_r+0x3c>
 8000d68:	686c      	ldr	r4, [r5, #4]
 8000d6a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d6e:	b29a      	uxth	r2, r3
 8000d70:	0715      	lsls	r5, r2, #28
 8000d72:	d42c      	bmi.n	8000dce <__swsetup_r+0x82>
 8000d74:	06d0      	lsls	r0, r2, #27
 8000d76:	d411      	bmi.n	8000d9c <__swsetup_r+0x50>
 8000d78:	2209      	movs	r2, #9
 8000d7a:	6032      	str	r2, [r6, #0]
 8000d7c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000d80:	81a3      	strh	r3, [r4, #12]
 8000d82:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000d86:	e03e      	b.n	8000e06 <__swsetup_r+0xba>
 8000d88:	4b25      	ldr	r3, [pc, #148]	; (8000e20 <__swsetup_r+0xd4>)
 8000d8a:	429c      	cmp	r4, r3
 8000d8c:	d101      	bne.n	8000d92 <__swsetup_r+0x46>
 8000d8e:	68ac      	ldr	r4, [r5, #8]
 8000d90:	e7eb      	b.n	8000d6a <__swsetup_r+0x1e>
 8000d92:	4b24      	ldr	r3, [pc, #144]	; (8000e24 <__swsetup_r+0xd8>)
 8000d94:	429c      	cmp	r4, r3
 8000d96:	bf08      	it	eq
 8000d98:	68ec      	ldreq	r4, [r5, #12]
 8000d9a:	e7e6      	b.n	8000d6a <__swsetup_r+0x1e>
 8000d9c:	0751      	lsls	r1, r2, #29
 8000d9e:	d512      	bpl.n	8000dc6 <__swsetup_r+0x7a>
 8000da0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000da2:	b141      	cbz	r1, 8000db6 <__swsetup_r+0x6a>
 8000da4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000da8:	4299      	cmp	r1, r3
 8000daa:	d002      	beq.n	8000db2 <__swsetup_r+0x66>
 8000dac:	4630      	mov	r0, r6
 8000dae:	f000 fa19 	bl	80011e4 <_free_r>
 8000db2:	2300      	movs	r3, #0
 8000db4:	6363      	str	r3, [r4, #52]	; 0x34
 8000db6:	89a3      	ldrh	r3, [r4, #12]
 8000db8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000dbc:	81a3      	strh	r3, [r4, #12]
 8000dbe:	2300      	movs	r3, #0
 8000dc0:	6063      	str	r3, [r4, #4]
 8000dc2:	6923      	ldr	r3, [r4, #16]
 8000dc4:	6023      	str	r3, [r4, #0]
 8000dc6:	89a3      	ldrh	r3, [r4, #12]
 8000dc8:	f043 0308 	orr.w	r3, r3, #8
 8000dcc:	81a3      	strh	r3, [r4, #12]
 8000dce:	6923      	ldr	r3, [r4, #16]
 8000dd0:	b94b      	cbnz	r3, 8000de6 <__swsetup_r+0x9a>
 8000dd2:	89a3      	ldrh	r3, [r4, #12]
 8000dd4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000dd8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000ddc:	d003      	beq.n	8000de6 <__swsetup_r+0x9a>
 8000dde:	4621      	mov	r1, r4
 8000de0:	4630      	mov	r0, r6
 8000de2:	f000 f9bf 	bl	8001164 <__smakebuf_r>
 8000de6:	89a2      	ldrh	r2, [r4, #12]
 8000de8:	f012 0301 	ands.w	r3, r2, #1
 8000dec:	d00c      	beq.n	8000e08 <__swsetup_r+0xbc>
 8000dee:	2300      	movs	r3, #0
 8000df0:	60a3      	str	r3, [r4, #8]
 8000df2:	6963      	ldr	r3, [r4, #20]
 8000df4:	425b      	negs	r3, r3
 8000df6:	61a3      	str	r3, [r4, #24]
 8000df8:	6923      	ldr	r3, [r4, #16]
 8000dfa:	b953      	cbnz	r3, 8000e12 <__swsetup_r+0xc6>
 8000dfc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000e00:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000e04:	d1ba      	bne.n	8000d7c <__swsetup_r+0x30>
 8000e06:	bd70      	pop	{r4, r5, r6, pc}
 8000e08:	0792      	lsls	r2, r2, #30
 8000e0a:	bf58      	it	pl
 8000e0c:	6963      	ldrpl	r3, [r4, #20]
 8000e0e:	60a3      	str	r3, [r4, #8]
 8000e10:	e7f2      	b.n	8000df8 <__swsetup_r+0xac>
 8000e12:	2000      	movs	r0, #0
 8000e14:	e7f7      	b.n	8000e06 <__swsetup_r+0xba>
 8000e16:	bf00      	nop
 8000e18:	20000004 	.word	0x20000004
 8000e1c:	0800164c 	.word	0x0800164c
 8000e20:	0800166c 	.word	0x0800166c
 8000e24:	0800162c 	.word	0x0800162c

08000e28 <__sflush_r>:
 8000e28:	898a      	ldrh	r2, [r1, #12]
 8000e2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e2e:	4605      	mov	r5, r0
 8000e30:	0710      	lsls	r0, r2, #28
 8000e32:	460c      	mov	r4, r1
 8000e34:	d458      	bmi.n	8000ee8 <__sflush_r+0xc0>
 8000e36:	684b      	ldr	r3, [r1, #4]
 8000e38:	2b00      	cmp	r3, #0
 8000e3a:	dc05      	bgt.n	8000e48 <__sflush_r+0x20>
 8000e3c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000e3e:	2b00      	cmp	r3, #0
 8000e40:	dc02      	bgt.n	8000e48 <__sflush_r+0x20>
 8000e42:	2000      	movs	r0, #0
 8000e44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000e48:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000e4a:	2e00      	cmp	r6, #0
 8000e4c:	d0f9      	beq.n	8000e42 <__sflush_r+0x1a>
 8000e4e:	2300      	movs	r3, #0
 8000e50:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000e54:	682f      	ldr	r7, [r5, #0]
 8000e56:	6a21      	ldr	r1, [r4, #32]
 8000e58:	602b      	str	r3, [r5, #0]
 8000e5a:	d032      	beq.n	8000ec2 <__sflush_r+0x9a>
 8000e5c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000e5e:	89a3      	ldrh	r3, [r4, #12]
 8000e60:	075a      	lsls	r2, r3, #29
 8000e62:	d505      	bpl.n	8000e70 <__sflush_r+0x48>
 8000e64:	6863      	ldr	r3, [r4, #4]
 8000e66:	1ac0      	subs	r0, r0, r3
 8000e68:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000e6a:	b10b      	cbz	r3, 8000e70 <__sflush_r+0x48>
 8000e6c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000e6e:	1ac0      	subs	r0, r0, r3
 8000e70:	2300      	movs	r3, #0
 8000e72:	4602      	mov	r2, r0
 8000e74:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000e76:	6a21      	ldr	r1, [r4, #32]
 8000e78:	4628      	mov	r0, r5
 8000e7a:	47b0      	blx	r6
 8000e7c:	1c43      	adds	r3, r0, #1
 8000e7e:	89a3      	ldrh	r3, [r4, #12]
 8000e80:	d106      	bne.n	8000e90 <__sflush_r+0x68>
 8000e82:	6829      	ldr	r1, [r5, #0]
 8000e84:	291d      	cmp	r1, #29
 8000e86:	d848      	bhi.n	8000f1a <__sflush_r+0xf2>
 8000e88:	4a29      	ldr	r2, [pc, #164]	; (8000f30 <__sflush_r+0x108>)
 8000e8a:	40ca      	lsrs	r2, r1
 8000e8c:	07d6      	lsls	r6, r2, #31
 8000e8e:	d544      	bpl.n	8000f1a <__sflush_r+0xf2>
 8000e90:	2200      	movs	r2, #0
 8000e92:	6062      	str	r2, [r4, #4]
 8000e94:	04d9      	lsls	r1, r3, #19
 8000e96:	6922      	ldr	r2, [r4, #16]
 8000e98:	6022      	str	r2, [r4, #0]
 8000e9a:	d504      	bpl.n	8000ea6 <__sflush_r+0x7e>
 8000e9c:	1c42      	adds	r2, r0, #1
 8000e9e:	d101      	bne.n	8000ea4 <__sflush_r+0x7c>
 8000ea0:	682b      	ldr	r3, [r5, #0]
 8000ea2:	b903      	cbnz	r3, 8000ea6 <__sflush_r+0x7e>
 8000ea4:	6560      	str	r0, [r4, #84]	; 0x54
 8000ea6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000ea8:	602f      	str	r7, [r5, #0]
 8000eaa:	2900      	cmp	r1, #0
 8000eac:	d0c9      	beq.n	8000e42 <__sflush_r+0x1a>
 8000eae:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000eb2:	4299      	cmp	r1, r3
 8000eb4:	d002      	beq.n	8000ebc <__sflush_r+0x94>
 8000eb6:	4628      	mov	r0, r5
 8000eb8:	f000 f994 	bl	80011e4 <_free_r>
 8000ebc:	2000      	movs	r0, #0
 8000ebe:	6360      	str	r0, [r4, #52]	; 0x34
 8000ec0:	e7c0      	b.n	8000e44 <__sflush_r+0x1c>
 8000ec2:	2301      	movs	r3, #1
 8000ec4:	4628      	mov	r0, r5
 8000ec6:	47b0      	blx	r6
 8000ec8:	1c41      	adds	r1, r0, #1
 8000eca:	d1c8      	bne.n	8000e5e <__sflush_r+0x36>
 8000ecc:	682b      	ldr	r3, [r5, #0]
 8000ece:	2b00      	cmp	r3, #0
 8000ed0:	d0c5      	beq.n	8000e5e <__sflush_r+0x36>
 8000ed2:	2b1d      	cmp	r3, #29
 8000ed4:	d001      	beq.n	8000eda <__sflush_r+0xb2>
 8000ed6:	2b16      	cmp	r3, #22
 8000ed8:	d101      	bne.n	8000ede <__sflush_r+0xb6>
 8000eda:	602f      	str	r7, [r5, #0]
 8000edc:	e7b1      	b.n	8000e42 <__sflush_r+0x1a>
 8000ede:	89a3      	ldrh	r3, [r4, #12]
 8000ee0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000ee4:	81a3      	strh	r3, [r4, #12]
 8000ee6:	e7ad      	b.n	8000e44 <__sflush_r+0x1c>
 8000ee8:	690f      	ldr	r7, [r1, #16]
 8000eea:	2f00      	cmp	r7, #0
 8000eec:	d0a9      	beq.n	8000e42 <__sflush_r+0x1a>
 8000eee:	0793      	lsls	r3, r2, #30
 8000ef0:	680e      	ldr	r6, [r1, #0]
 8000ef2:	bf08      	it	eq
 8000ef4:	694b      	ldreq	r3, [r1, #20]
 8000ef6:	600f      	str	r7, [r1, #0]
 8000ef8:	bf18      	it	ne
 8000efa:	2300      	movne	r3, #0
 8000efc:	eba6 0807 	sub.w	r8, r6, r7
 8000f00:	608b      	str	r3, [r1, #8]
 8000f02:	f1b8 0f00 	cmp.w	r8, #0
 8000f06:	dd9c      	ble.n	8000e42 <__sflush_r+0x1a>
 8000f08:	4643      	mov	r3, r8
 8000f0a:	463a      	mov	r2, r7
 8000f0c:	6a21      	ldr	r1, [r4, #32]
 8000f0e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000f10:	4628      	mov	r0, r5
 8000f12:	47b0      	blx	r6
 8000f14:	2800      	cmp	r0, #0
 8000f16:	dc06      	bgt.n	8000f26 <__sflush_r+0xfe>
 8000f18:	89a3      	ldrh	r3, [r4, #12]
 8000f1a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f1e:	81a3      	strh	r3, [r4, #12]
 8000f20:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000f24:	e78e      	b.n	8000e44 <__sflush_r+0x1c>
 8000f26:	4407      	add	r7, r0
 8000f28:	eba8 0800 	sub.w	r8, r8, r0
 8000f2c:	e7e9      	b.n	8000f02 <__sflush_r+0xda>
 8000f2e:	bf00      	nop
 8000f30:	20400001 	.word	0x20400001

08000f34 <_fflush_r>:
 8000f34:	b538      	push	{r3, r4, r5, lr}
 8000f36:	690b      	ldr	r3, [r1, #16]
 8000f38:	4605      	mov	r5, r0
 8000f3a:	460c      	mov	r4, r1
 8000f3c:	b1db      	cbz	r3, 8000f76 <_fflush_r+0x42>
 8000f3e:	b118      	cbz	r0, 8000f48 <_fflush_r+0x14>
 8000f40:	6983      	ldr	r3, [r0, #24]
 8000f42:	b90b      	cbnz	r3, 8000f48 <_fflush_r+0x14>
 8000f44:	f000 f860 	bl	8001008 <__sinit>
 8000f48:	4b0c      	ldr	r3, [pc, #48]	; (8000f7c <_fflush_r+0x48>)
 8000f4a:	429c      	cmp	r4, r3
 8000f4c:	d109      	bne.n	8000f62 <_fflush_r+0x2e>
 8000f4e:	686c      	ldr	r4, [r5, #4]
 8000f50:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f54:	b17b      	cbz	r3, 8000f76 <_fflush_r+0x42>
 8000f56:	4621      	mov	r1, r4
 8000f58:	4628      	mov	r0, r5
 8000f5a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000f5e:	f7ff bf63 	b.w	8000e28 <__sflush_r>
 8000f62:	4b07      	ldr	r3, [pc, #28]	; (8000f80 <_fflush_r+0x4c>)
 8000f64:	429c      	cmp	r4, r3
 8000f66:	d101      	bne.n	8000f6c <_fflush_r+0x38>
 8000f68:	68ac      	ldr	r4, [r5, #8]
 8000f6a:	e7f1      	b.n	8000f50 <_fflush_r+0x1c>
 8000f6c:	4b05      	ldr	r3, [pc, #20]	; (8000f84 <_fflush_r+0x50>)
 8000f6e:	429c      	cmp	r4, r3
 8000f70:	bf08      	it	eq
 8000f72:	68ec      	ldreq	r4, [r5, #12]
 8000f74:	e7ec      	b.n	8000f50 <_fflush_r+0x1c>
 8000f76:	2000      	movs	r0, #0
 8000f78:	bd38      	pop	{r3, r4, r5, pc}
 8000f7a:	bf00      	nop
 8000f7c:	0800164c 	.word	0x0800164c
 8000f80:	0800166c 	.word	0x0800166c
 8000f84:	0800162c 	.word	0x0800162c

08000f88 <std>:
 8000f88:	2300      	movs	r3, #0
 8000f8a:	b510      	push	{r4, lr}
 8000f8c:	4604      	mov	r4, r0
 8000f8e:	e9c0 3300 	strd	r3, r3, [r0]
 8000f92:	6083      	str	r3, [r0, #8]
 8000f94:	8181      	strh	r1, [r0, #12]
 8000f96:	6643      	str	r3, [r0, #100]	; 0x64
 8000f98:	81c2      	strh	r2, [r0, #14]
 8000f9a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000f9e:	6183      	str	r3, [r0, #24]
 8000fa0:	4619      	mov	r1, r3
 8000fa2:	2208      	movs	r2, #8
 8000fa4:	305c      	adds	r0, #92	; 0x5c
 8000fa6:	f7ff fb79 	bl	800069c <memset>
 8000faa:	4b05      	ldr	r3, [pc, #20]	; (8000fc0 <std+0x38>)
 8000fac:	6263      	str	r3, [r4, #36]	; 0x24
 8000fae:	4b05      	ldr	r3, [pc, #20]	; (8000fc4 <std+0x3c>)
 8000fb0:	62a3      	str	r3, [r4, #40]	; 0x28
 8000fb2:	4b05      	ldr	r3, [pc, #20]	; (8000fc8 <std+0x40>)
 8000fb4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000fb6:	4b05      	ldr	r3, [pc, #20]	; (8000fcc <std+0x44>)
 8000fb8:	6224      	str	r4, [r4, #32]
 8000fba:	6323      	str	r3, [r4, #48]	; 0x30
 8000fbc:	bd10      	pop	{r4, pc}
 8000fbe:	bf00      	nop
 8000fc0:	080013c1 	.word	0x080013c1
 8000fc4:	080013e3 	.word	0x080013e3
 8000fc8:	0800141b 	.word	0x0800141b
 8000fcc:	0800143f 	.word	0x0800143f

08000fd0 <_cleanup_r>:
 8000fd0:	4901      	ldr	r1, [pc, #4]	; (8000fd8 <_cleanup_r+0x8>)
 8000fd2:	f000 b885 	b.w	80010e0 <_fwalk_reent>
 8000fd6:	bf00      	nop
 8000fd8:	08000f35 	.word	0x08000f35

08000fdc <__sfmoreglue>:
 8000fdc:	b570      	push	{r4, r5, r6, lr}
 8000fde:	1e4a      	subs	r2, r1, #1
 8000fe0:	2568      	movs	r5, #104	; 0x68
 8000fe2:	4355      	muls	r5, r2
 8000fe4:	460e      	mov	r6, r1
 8000fe6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000fea:	f000 f949 	bl	8001280 <_malloc_r>
 8000fee:	4604      	mov	r4, r0
 8000ff0:	b140      	cbz	r0, 8001004 <__sfmoreglue+0x28>
 8000ff2:	2100      	movs	r1, #0
 8000ff4:	e9c0 1600 	strd	r1, r6, [r0]
 8000ff8:	300c      	adds	r0, #12
 8000ffa:	60a0      	str	r0, [r4, #8]
 8000ffc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8001000:	f7ff fb4c 	bl	800069c <memset>
 8001004:	4620      	mov	r0, r4
 8001006:	bd70      	pop	{r4, r5, r6, pc}

08001008 <__sinit>:
 8001008:	6983      	ldr	r3, [r0, #24]
 800100a:	b510      	push	{r4, lr}
 800100c:	4604      	mov	r4, r0
 800100e:	bb33      	cbnz	r3, 800105e <__sinit+0x56>
 8001010:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8001014:	6503      	str	r3, [r0, #80]	; 0x50
 8001016:	4b12      	ldr	r3, [pc, #72]	; (8001060 <__sinit+0x58>)
 8001018:	4a12      	ldr	r2, [pc, #72]	; (8001064 <__sinit+0x5c>)
 800101a:	681b      	ldr	r3, [r3, #0]
 800101c:	6282      	str	r2, [r0, #40]	; 0x28
 800101e:	4298      	cmp	r0, r3
 8001020:	bf04      	itt	eq
 8001022:	2301      	moveq	r3, #1
 8001024:	6183      	streq	r3, [r0, #24]
 8001026:	f000 f81f 	bl	8001068 <__sfp>
 800102a:	6060      	str	r0, [r4, #4]
 800102c:	4620      	mov	r0, r4
 800102e:	f000 f81b 	bl	8001068 <__sfp>
 8001032:	60a0      	str	r0, [r4, #8]
 8001034:	4620      	mov	r0, r4
 8001036:	f000 f817 	bl	8001068 <__sfp>
 800103a:	2200      	movs	r2, #0
 800103c:	60e0      	str	r0, [r4, #12]
 800103e:	2104      	movs	r1, #4
 8001040:	6860      	ldr	r0, [r4, #4]
 8001042:	f7ff ffa1 	bl	8000f88 <std>
 8001046:	2201      	movs	r2, #1
 8001048:	2109      	movs	r1, #9
 800104a:	68a0      	ldr	r0, [r4, #8]
 800104c:	f7ff ff9c 	bl	8000f88 <std>
 8001050:	2202      	movs	r2, #2
 8001052:	2112      	movs	r1, #18
 8001054:	68e0      	ldr	r0, [r4, #12]
 8001056:	f7ff ff97 	bl	8000f88 <std>
 800105a:	2301      	movs	r3, #1
 800105c:	61a3      	str	r3, [r4, #24]
 800105e:	bd10      	pop	{r4, pc}
 8001060:	080015f4 	.word	0x080015f4
 8001064:	08000fd1 	.word	0x08000fd1

08001068 <__sfp>:
 8001068:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800106a:	4b1b      	ldr	r3, [pc, #108]	; (80010d8 <__sfp+0x70>)
 800106c:	681e      	ldr	r6, [r3, #0]
 800106e:	69b3      	ldr	r3, [r6, #24]
 8001070:	4607      	mov	r7, r0
 8001072:	b913      	cbnz	r3, 800107a <__sfp+0x12>
 8001074:	4630      	mov	r0, r6
 8001076:	f7ff ffc7 	bl	8001008 <__sinit>
 800107a:	3648      	adds	r6, #72	; 0x48
 800107c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8001080:	3b01      	subs	r3, #1
 8001082:	d503      	bpl.n	800108c <__sfp+0x24>
 8001084:	6833      	ldr	r3, [r6, #0]
 8001086:	b133      	cbz	r3, 8001096 <__sfp+0x2e>
 8001088:	6836      	ldr	r6, [r6, #0]
 800108a:	e7f7      	b.n	800107c <__sfp+0x14>
 800108c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8001090:	b16d      	cbz	r5, 80010ae <__sfp+0x46>
 8001092:	3468      	adds	r4, #104	; 0x68
 8001094:	e7f4      	b.n	8001080 <__sfp+0x18>
 8001096:	2104      	movs	r1, #4
 8001098:	4638      	mov	r0, r7
 800109a:	f7ff ff9f 	bl	8000fdc <__sfmoreglue>
 800109e:	6030      	str	r0, [r6, #0]
 80010a0:	2800      	cmp	r0, #0
 80010a2:	d1f1      	bne.n	8001088 <__sfp+0x20>
 80010a4:	230c      	movs	r3, #12
 80010a6:	603b      	str	r3, [r7, #0]
 80010a8:	4604      	mov	r4, r0
 80010aa:	4620      	mov	r0, r4
 80010ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010ae:	4b0b      	ldr	r3, [pc, #44]	; (80010dc <__sfp+0x74>)
 80010b0:	6665      	str	r5, [r4, #100]	; 0x64
 80010b2:	e9c4 5500 	strd	r5, r5, [r4]
 80010b6:	60a5      	str	r5, [r4, #8]
 80010b8:	e9c4 3503 	strd	r3, r5, [r4, #12]
 80010bc:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80010c0:	2208      	movs	r2, #8
 80010c2:	4629      	mov	r1, r5
 80010c4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80010c8:	f7ff fae8 	bl	800069c <memset>
 80010cc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80010d0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80010d4:	e7e9      	b.n	80010aa <__sfp+0x42>
 80010d6:	bf00      	nop
 80010d8:	080015f4 	.word	0x080015f4
 80010dc:	ffff0001 	.word	0xffff0001

080010e0 <_fwalk_reent>:
 80010e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80010e4:	4680      	mov	r8, r0
 80010e6:	4689      	mov	r9, r1
 80010e8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80010ec:	2600      	movs	r6, #0
 80010ee:	b914      	cbnz	r4, 80010f6 <_fwalk_reent+0x16>
 80010f0:	4630      	mov	r0, r6
 80010f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80010f6:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 80010fa:	3f01      	subs	r7, #1
 80010fc:	d501      	bpl.n	8001102 <_fwalk_reent+0x22>
 80010fe:	6824      	ldr	r4, [r4, #0]
 8001100:	e7f5      	b.n	80010ee <_fwalk_reent+0xe>
 8001102:	89ab      	ldrh	r3, [r5, #12]
 8001104:	2b01      	cmp	r3, #1
 8001106:	d907      	bls.n	8001118 <_fwalk_reent+0x38>
 8001108:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800110c:	3301      	adds	r3, #1
 800110e:	d003      	beq.n	8001118 <_fwalk_reent+0x38>
 8001110:	4629      	mov	r1, r5
 8001112:	4640      	mov	r0, r8
 8001114:	47c8      	blx	r9
 8001116:	4306      	orrs	r6, r0
 8001118:	3568      	adds	r5, #104	; 0x68
 800111a:	e7ee      	b.n	80010fa <_fwalk_reent+0x1a>

0800111c <__swhatbuf_r>:
 800111c:	b570      	push	{r4, r5, r6, lr}
 800111e:	460e      	mov	r6, r1
 8001120:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001124:	2900      	cmp	r1, #0
 8001126:	b096      	sub	sp, #88	; 0x58
 8001128:	4614      	mov	r4, r2
 800112a:	461d      	mov	r5, r3
 800112c:	da07      	bge.n	800113e <__swhatbuf_r+0x22>
 800112e:	2300      	movs	r3, #0
 8001130:	602b      	str	r3, [r5, #0]
 8001132:	89b3      	ldrh	r3, [r6, #12]
 8001134:	061a      	lsls	r2, r3, #24
 8001136:	d410      	bmi.n	800115a <__swhatbuf_r+0x3e>
 8001138:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800113c:	e00e      	b.n	800115c <__swhatbuf_r+0x40>
 800113e:	466a      	mov	r2, sp
 8001140:	f000 f9a4 	bl	800148c <_fstat_r>
 8001144:	2800      	cmp	r0, #0
 8001146:	dbf2      	blt.n	800112e <__swhatbuf_r+0x12>
 8001148:	9a01      	ldr	r2, [sp, #4]
 800114a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800114e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001152:	425a      	negs	r2, r3
 8001154:	415a      	adcs	r2, r3
 8001156:	602a      	str	r2, [r5, #0]
 8001158:	e7ee      	b.n	8001138 <__swhatbuf_r+0x1c>
 800115a:	2340      	movs	r3, #64	; 0x40
 800115c:	2000      	movs	r0, #0
 800115e:	6023      	str	r3, [r4, #0]
 8001160:	b016      	add	sp, #88	; 0x58
 8001162:	bd70      	pop	{r4, r5, r6, pc}

08001164 <__smakebuf_r>:
 8001164:	898b      	ldrh	r3, [r1, #12]
 8001166:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001168:	079d      	lsls	r5, r3, #30
 800116a:	4606      	mov	r6, r0
 800116c:	460c      	mov	r4, r1
 800116e:	d507      	bpl.n	8001180 <__smakebuf_r+0x1c>
 8001170:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001174:	6023      	str	r3, [r4, #0]
 8001176:	6123      	str	r3, [r4, #16]
 8001178:	2301      	movs	r3, #1
 800117a:	6163      	str	r3, [r4, #20]
 800117c:	b002      	add	sp, #8
 800117e:	bd70      	pop	{r4, r5, r6, pc}
 8001180:	ab01      	add	r3, sp, #4
 8001182:	466a      	mov	r2, sp
 8001184:	f7ff ffca 	bl	800111c <__swhatbuf_r>
 8001188:	9900      	ldr	r1, [sp, #0]
 800118a:	4605      	mov	r5, r0
 800118c:	4630      	mov	r0, r6
 800118e:	f000 f877 	bl	8001280 <_malloc_r>
 8001192:	b948      	cbnz	r0, 80011a8 <__smakebuf_r+0x44>
 8001194:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001198:	059a      	lsls	r2, r3, #22
 800119a:	d4ef      	bmi.n	800117c <__smakebuf_r+0x18>
 800119c:	f023 0303 	bic.w	r3, r3, #3
 80011a0:	f043 0302 	orr.w	r3, r3, #2
 80011a4:	81a3      	strh	r3, [r4, #12]
 80011a6:	e7e3      	b.n	8001170 <__smakebuf_r+0xc>
 80011a8:	4b0d      	ldr	r3, [pc, #52]	; (80011e0 <__smakebuf_r+0x7c>)
 80011aa:	62b3      	str	r3, [r6, #40]	; 0x28
 80011ac:	89a3      	ldrh	r3, [r4, #12]
 80011ae:	6020      	str	r0, [r4, #0]
 80011b0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80011b4:	81a3      	strh	r3, [r4, #12]
 80011b6:	9b00      	ldr	r3, [sp, #0]
 80011b8:	6163      	str	r3, [r4, #20]
 80011ba:	9b01      	ldr	r3, [sp, #4]
 80011bc:	6120      	str	r0, [r4, #16]
 80011be:	b15b      	cbz	r3, 80011d8 <__smakebuf_r+0x74>
 80011c0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80011c4:	4630      	mov	r0, r6
 80011c6:	f000 f973 	bl	80014b0 <_isatty_r>
 80011ca:	b128      	cbz	r0, 80011d8 <__smakebuf_r+0x74>
 80011cc:	89a3      	ldrh	r3, [r4, #12]
 80011ce:	f023 0303 	bic.w	r3, r3, #3
 80011d2:	f043 0301 	orr.w	r3, r3, #1
 80011d6:	81a3      	strh	r3, [r4, #12]
 80011d8:	89a3      	ldrh	r3, [r4, #12]
 80011da:	431d      	orrs	r5, r3
 80011dc:	81a5      	strh	r5, [r4, #12]
 80011de:	e7cd      	b.n	800117c <__smakebuf_r+0x18>
 80011e0:	08000fd1 	.word	0x08000fd1

080011e4 <_free_r>:
 80011e4:	b538      	push	{r3, r4, r5, lr}
 80011e6:	4605      	mov	r5, r0
 80011e8:	2900      	cmp	r1, #0
 80011ea:	d045      	beq.n	8001278 <_free_r+0x94>
 80011ec:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80011f0:	1f0c      	subs	r4, r1, #4
 80011f2:	2b00      	cmp	r3, #0
 80011f4:	bfb8      	it	lt
 80011f6:	18e4      	addlt	r4, r4, r3
 80011f8:	f000 f97c 	bl	80014f4 <__malloc_lock>
 80011fc:	4a1f      	ldr	r2, [pc, #124]	; (800127c <_free_r+0x98>)
 80011fe:	6813      	ldr	r3, [r2, #0]
 8001200:	4610      	mov	r0, r2
 8001202:	b933      	cbnz	r3, 8001212 <_free_r+0x2e>
 8001204:	6063      	str	r3, [r4, #4]
 8001206:	6014      	str	r4, [r2, #0]
 8001208:	4628      	mov	r0, r5
 800120a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800120e:	f000 b972 	b.w	80014f6 <__malloc_unlock>
 8001212:	42a3      	cmp	r3, r4
 8001214:	d90c      	bls.n	8001230 <_free_r+0x4c>
 8001216:	6821      	ldr	r1, [r4, #0]
 8001218:	1862      	adds	r2, r4, r1
 800121a:	4293      	cmp	r3, r2
 800121c:	bf04      	itt	eq
 800121e:	681a      	ldreq	r2, [r3, #0]
 8001220:	685b      	ldreq	r3, [r3, #4]
 8001222:	6063      	str	r3, [r4, #4]
 8001224:	bf04      	itt	eq
 8001226:	1852      	addeq	r2, r2, r1
 8001228:	6022      	streq	r2, [r4, #0]
 800122a:	6004      	str	r4, [r0, #0]
 800122c:	e7ec      	b.n	8001208 <_free_r+0x24>
 800122e:	4613      	mov	r3, r2
 8001230:	685a      	ldr	r2, [r3, #4]
 8001232:	b10a      	cbz	r2, 8001238 <_free_r+0x54>
 8001234:	42a2      	cmp	r2, r4
 8001236:	d9fa      	bls.n	800122e <_free_r+0x4a>
 8001238:	6819      	ldr	r1, [r3, #0]
 800123a:	1858      	adds	r0, r3, r1
 800123c:	42a0      	cmp	r0, r4
 800123e:	d10b      	bne.n	8001258 <_free_r+0x74>
 8001240:	6820      	ldr	r0, [r4, #0]
 8001242:	4401      	add	r1, r0
 8001244:	1858      	adds	r0, r3, r1
 8001246:	4282      	cmp	r2, r0
 8001248:	6019      	str	r1, [r3, #0]
 800124a:	d1dd      	bne.n	8001208 <_free_r+0x24>
 800124c:	6810      	ldr	r0, [r2, #0]
 800124e:	6852      	ldr	r2, [r2, #4]
 8001250:	605a      	str	r2, [r3, #4]
 8001252:	4401      	add	r1, r0
 8001254:	6019      	str	r1, [r3, #0]
 8001256:	e7d7      	b.n	8001208 <_free_r+0x24>
 8001258:	d902      	bls.n	8001260 <_free_r+0x7c>
 800125a:	230c      	movs	r3, #12
 800125c:	602b      	str	r3, [r5, #0]
 800125e:	e7d3      	b.n	8001208 <_free_r+0x24>
 8001260:	6820      	ldr	r0, [r4, #0]
 8001262:	1821      	adds	r1, r4, r0
 8001264:	428a      	cmp	r2, r1
 8001266:	bf04      	itt	eq
 8001268:	6811      	ldreq	r1, [r2, #0]
 800126a:	6852      	ldreq	r2, [r2, #4]
 800126c:	6062      	str	r2, [r4, #4]
 800126e:	bf04      	itt	eq
 8001270:	1809      	addeq	r1, r1, r0
 8001272:	6021      	streq	r1, [r4, #0]
 8001274:	605c      	str	r4, [r3, #4]
 8001276:	e7c7      	b.n	8001208 <_free_r+0x24>
 8001278:	bd38      	pop	{r3, r4, r5, pc}
 800127a:	bf00      	nop
 800127c:	20000084 	.word	0x20000084

08001280 <_malloc_r>:
 8001280:	b570      	push	{r4, r5, r6, lr}
 8001282:	1ccd      	adds	r5, r1, #3
 8001284:	f025 0503 	bic.w	r5, r5, #3
 8001288:	3508      	adds	r5, #8
 800128a:	2d0c      	cmp	r5, #12
 800128c:	bf38      	it	cc
 800128e:	250c      	movcc	r5, #12
 8001290:	2d00      	cmp	r5, #0
 8001292:	4606      	mov	r6, r0
 8001294:	db01      	blt.n	800129a <_malloc_r+0x1a>
 8001296:	42a9      	cmp	r1, r5
 8001298:	d903      	bls.n	80012a2 <_malloc_r+0x22>
 800129a:	230c      	movs	r3, #12
 800129c:	6033      	str	r3, [r6, #0]
 800129e:	2000      	movs	r0, #0
 80012a0:	bd70      	pop	{r4, r5, r6, pc}
 80012a2:	f000 f927 	bl	80014f4 <__malloc_lock>
 80012a6:	4a21      	ldr	r2, [pc, #132]	; (800132c <_malloc_r+0xac>)
 80012a8:	6814      	ldr	r4, [r2, #0]
 80012aa:	4621      	mov	r1, r4
 80012ac:	b991      	cbnz	r1, 80012d4 <_malloc_r+0x54>
 80012ae:	4c20      	ldr	r4, [pc, #128]	; (8001330 <_malloc_r+0xb0>)
 80012b0:	6823      	ldr	r3, [r4, #0]
 80012b2:	b91b      	cbnz	r3, 80012bc <_malloc_r+0x3c>
 80012b4:	4630      	mov	r0, r6
 80012b6:	f000 f873 	bl	80013a0 <_sbrk_r>
 80012ba:	6020      	str	r0, [r4, #0]
 80012bc:	4629      	mov	r1, r5
 80012be:	4630      	mov	r0, r6
 80012c0:	f000 f86e 	bl	80013a0 <_sbrk_r>
 80012c4:	1c43      	adds	r3, r0, #1
 80012c6:	d124      	bne.n	8001312 <_malloc_r+0x92>
 80012c8:	230c      	movs	r3, #12
 80012ca:	6033      	str	r3, [r6, #0]
 80012cc:	4630      	mov	r0, r6
 80012ce:	f000 f912 	bl	80014f6 <__malloc_unlock>
 80012d2:	e7e4      	b.n	800129e <_malloc_r+0x1e>
 80012d4:	680b      	ldr	r3, [r1, #0]
 80012d6:	1b5b      	subs	r3, r3, r5
 80012d8:	d418      	bmi.n	800130c <_malloc_r+0x8c>
 80012da:	2b0b      	cmp	r3, #11
 80012dc:	d90f      	bls.n	80012fe <_malloc_r+0x7e>
 80012de:	600b      	str	r3, [r1, #0]
 80012e0:	50cd      	str	r5, [r1, r3]
 80012e2:	18cc      	adds	r4, r1, r3
 80012e4:	4630      	mov	r0, r6
 80012e6:	f000 f906 	bl	80014f6 <__malloc_unlock>
 80012ea:	f104 000b 	add.w	r0, r4, #11
 80012ee:	1d23      	adds	r3, r4, #4
 80012f0:	f020 0007 	bic.w	r0, r0, #7
 80012f4:	1ac3      	subs	r3, r0, r3
 80012f6:	d0d3      	beq.n	80012a0 <_malloc_r+0x20>
 80012f8:	425a      	negs	r2, r3
 80012fa:	50e2      	str	r2, [r4, r3]
 80012fc:	e7d0      	b.n	80012a0 <_malloc_r+0x20>
 80012fe:	428c      	cmp	r4, r1
 8001300:	684b      	ldr	r3, [r1, #4]
 8001302:	bf16      	itet	ne
 8001304:	6063      	strne	r3, [r4, #4]
 8001306:	6013      	streq	r3, [r2, #0]
 8001308:	460c      	movne	r4, r1
 800130a:	e7eb      	b.n	80012e4 <_malloc_r+0x64>
 800130c:	460c      	mov	r4, r1
 800130e:	6849      	ldr	r1, [r1, #4]
 8001310:	e7cc      	b.n	80012ac <_malloc_r+0x2c>
 8001312:	1cc4      	adds	r4, r0, #3
 8001314:	f024 0403 	bic.w	r4, r4, #3
 8001318:	42a0      	cmp	r0, r4
 800131a:	d005      	beq.n	8001328 <_malloc_r+0xa8>
 800131c:	1a21      	subs	r1, r4, r0
 800131e:	4630      	mov	r0, r6
 8001320:	f000 f83e 	bl	80013a0 <_sbrk_r>
 8001324:	3001      	adds	r0, #1
 8001326:	d0cf      	beq.n	80012c8 <_malloc_r+0x48>
 8001328:	6025      	str	r5, [r4, #0]
 800132a:	e7db      	b.n	80012e4 <_malloc_r+0x64>
 800132c:	20000084 	.word	0x20000084
 8001330:	20000088 	.word	0x20000088

08001334 <_putc_r>:
 8001334:	b570      	push	{r4, r5, r6, lr}
 8001336:	460d      	mov	r5, r1
 8001338:	4614      	mov	r4, r2
 800133a:	4606      	mov	r6, r0
 800133c:	b118      	cbz	r0, 8001346 <_putc_r+0x12>
 800133e:	6983      	ldr	r3, [r0, #24]
 8001340:	b90b      	cbnz	r3, 8001346 <_putc_r+0x12>
 8001342:	f7ff fe61 	bl	8001008 <__sinit>
 8001346:	4b13      	ldr	r3, [pc, #76]	; (8001394 <_putc_r+0x60>)
 8001348:	429c      	cmp	r4, r3
 800134a:	d112      	bne.n	8001372 <_putc_r+0x3e>
 800134c:	6874      	ldr	r4, [r6, #4]
 800134e:	68a3      	ldr	r3, [r4, #8]
 8001350:	3b01      	subs	r3, #1
 8001352:	2b00      	cmp	r3, #0
 8001354:	60a3      	str	r3, [r4, #8]
 8001356:	da16      	bge.n	8001386 <_putc_r+0x52>
 8001358:	69a2      	ldr	r2, [r4, #24]
 800135a:	4293      	cmp	r3, r2
 800135c:	db02      	blt.n	8001364 <_putc_r+0x30>
 800135e:	b2eb      	uxtb	r3, r5
 8001360:	2b0a      	cmp	r3, #10
 8001362:	d110      	bne.n	8001386 <_putc_r+0x52>
 8001364:	4622      	mov	r2, r4
 8001366:	4629      	mov	r1, r5
 8001368:	4630      	mov	r0, r6
 800136a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800136e:	f7ff bc9b 	b.w	8000ca8 <__swbuf_r>
 8001372:	4b09      	ldr	r3, [pc, #36]	; (8001398 <_putc_r+0x64>)
 8001374:	429c      	cmp	r4, r3
 8001376:	d101      	bne.n	800137c <_putc_r+0x48>
 8001378:	68b4      	ldr	r4, [r6, #8]
 800137a:	e7e8      	b.n	800134e <_putc_r+0x1a>
 800137c:	4b07      	ldr	r3, [pc, #28]	; (800139c <_putc_r+0x68>)
 800137e:	429c      	cmp	r4, r3
 8001380:	bf08      	it	eq
 8001382:	68f4      	ldreq	r4, [r6, #12]
 8001384:	e7e3      	b.n	800134e <_putc_r+0x1a>
 8001386:	6823      	ldr	r3, [r4, #0]
 8001388:	1c5a      	adds	r2, r3, #1
 800138a:	6022      	str	r2, [r4, #0]
 800138c:	701d      	strb	r5, [r3, #0]
 800138e:	b2e8      	uxtb	r0, r5
 8001390:	bd70      	pop	{r4, r5, r6, pc}
 8001392:	bf00      	nop
 8001394:	0800164c 	.word	0x0800164c
 8001398:	0800166c 	.word	0x0800166c
 800139c:	0800162c 	.word	0x0800162c

080013a0 <_sbrk_r>:
 80013a0:	b538      	push	{r3, r4, r5, lr}
 80013a2:	4c06      	ldr	r4, [pc, #24]	; (80013bc <_sbrk_r+0x1c>)
 80013a4:	2300      	movs	r3, #0
 80013a6:	4605      	mov	r5, r0
 80013a8:	4608      	mov	r0, r1
 80013aa:	6023      	str	r3, [r4, #0]
 80013ac:	f000 f8de 	bl	800156c <_sbrk>
 80013b0:	1c43      	adds	r3, r0, #1
 80013b2:	d102      	bne.n	80013ba <_sbrk_r+0x1a>
 80013b4:	6823      	ldr	r3, [r4, #0]
 80013b6:	b103      	cbz	r3, 80013ba <_sbrk_r+0x1a>
 80013b8:	602b      	str	r3, [r5, #0]
 80013ba:	bd38      	pop	{r3, r4, r5, pc}
 80013bc:	20000090 	.word	0x20000090

080013c0 <__sread>:
 80013c0:	b510      	push	{r4, lr}
 80013c2:	460c      	mov	r4, r1
 80013c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013c8:	f000 f896 	bl	80014f8 <_read_r>
 80013cc:	2800      	cmp	r0, #0
 80013ce:	bfab      	itete	ge
 80013d0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80013d2:	89a3      	ldrhlt	r3, [r4, #12]
 80013d4:	181b      	addge	r3, r3, r0
 80013d6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80013da:	bfac      	ite	ge
 80013dc:	6563      	strge	r3, [r4, #84]	; 0x54
 80013de:	81a3      	strhlt	r3, [r4, #12]
 80013e0:	bd10      	pop	{r4, pc}

080013e2 <__swrite>:
 80013e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80013e6:	461f      	mov	r7, r3
 80013e8:	898b      	ldrh	r3, [r1, #12]
 80013ea:	05db      	lsls	r3, r3, #23
 80013ec:	4605      	mov	r5, r0
 80013ee:	460c      	mov	r4, r1
 80013f0:	4616      	mov	r6, r2
 80013f2:	d505      	bpl.n	8001400 <__swrite+0x1e>
 80013f4:	2302      	movs	r3, #2
 80013f6:	2200      	movs	r2, #0
 80013f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013fc:	f000 f868 	bl	80014d0 <_lseek_r>
 8001400:	89a3      	ldrh	r3, [r4, #12]
 8001402:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001406:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800140a:	81a3      	strh	r3, [r4, #12]
 800140c:	4632      	mov	r2, r6
 800140e:	463b      	mov	r3, r7
 8001410:	4628      	mov	r0, r5
 8001412:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001416:	f000 b817 	b.w	8001448 <_write_r>

0800141a <__sseek>:
 800141a:	b510      	push	{r4, lr}
 800141c:	460c      	mov	r4, r1
 800141e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001422:	f000 f855 	bl	80014d0 <_lseek_r>
 8001426:	1c43      	adds	r3, r0, #1
 8001428:	89a3      	ldrh	r3, [r4, #12]
 800142a:	bf15      	itete	ne
 800142c:	6560      	strne	r0, [r4, #84]	; 0x54
 800142e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001432:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001436:	81a3      	strheq	r3, [r4, #12]
 8001438:	bf18      	it	ne
 800143a:	81a3      	strhne	r3, [r4, #12]
 800143c:	bd10      	pop	{r4, pc}

0800143e <__sclose>:
 800143e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001442:	f000 b813 	b.w	800146c <_close_r>
	...

08001448 <_write_r>:
 8001448:	b538      	push	{r3, r4, r5, lr}
 800144a:	4c07      	ldr	r4, [pc, #28]	; (8001468 <_write_r+0x20>)
 800144c:	4605      	mov	r5, r0
 800144e:	4608      	mov	r0, r1
 8001450:	4611      	mov	r1, r2
 8001452:	2200      	movs	r2, #0
 8001454:	6022      	str	r2, [r4, #0]
 8001456:	461a      	mov	r2, r3
 8001458:	f7fe ff41 	bl	80002de <_write>
 800145c:	1c43      	adds	r3, r0, #1
 800145e:	d102      	bne.n	8001466 <_write_r+0x1e>
 8001460:	6823      	ldr	r3, [r4, #0]
 8001462:	b103      	cbz	r3, 8001466 <_write_r+0x1e>
 8001464:	602b      	str	r3, [r5, #0]
 8001466:	bd38      	pop	{r3, r4, r5, pc}
 8001468:	20000090 	.word	0x20000090

0800146c <_close_r>:
 800146c:	b538      	push	{r3, r4, r5, lr}
 800146e:	4c06      	ldr	r4, [pc, #24]	; (8001488 <_close_r+0x1c>)
 8001470:	2300      	movs	r3, #0
 8001472:	4605      	mov	r5, r0
 8001474:	4608      	mov	r0, r1
 8001476:	6023      	str	r3, [r4, #0]
 8001478:	f000 f850 	bl	800151c <_close>
 800147c:	1c43      	adds	r3, r0, #1
 800147e:	d102      	bne.n	8001486 <_close_r+0x1a>
 8001480:	6823      	ldr	r3, [r4, #0]
 8001482:	b103      	cbz	r3, 8001486 <_close_r+0x1a>
 8001484:	602b      	str	r3, [r5, #0]
 8001486:	bd38      	pop	{r3, r4, r5, pc}
 8001488:	20000090 	.word	0x20000090

0800148c <_fstat_r>:
 800148c:	b538      	push	{r3, r4, r5, lr}
 800148e:	4c07      	ldr	r4, [pc, #28]	; (80014ac <_fstat_r+0x20>)
 8001490:	2300      	movs	r3, #0
 8001492:	4605      	mov	r5, r0
 8001494:	4608      	mov	r0, r1
 8001496:	4611      	mov	r1, r2
 8001498:	6023      	str	r3, [r4, #0]
 800149a:	f000 f847 	bl	800152c <_fstat>
 800149e:	1c43      	adds	r3, r0, #1
 80014a0:	d102      	bne.n	80014a8 <_fstat_r+0x1c>
 80014a2:	6823      	ldr	r3, [r4, #0]
 80014a4:	b103      	cbz	r3, 80014a8 <_fstat_r+0x1c>
 80014a6:	602b      	str	r3, [r5, #0]
 80014a8:	bd38      	pop	{r3, r4, r5, pc}
 80014aa:	bf00      	nop
 80014ac:	20000090 	.word	0x20000090

080014b0 <_isatty_r>:
 80014b0:	b538      	push	{r3, r4, r5, lr}
 80014b2:	4c06      	ldr	r4, [pc, #24]	; (80014cc <_isatty_r+0x1c>)
 80014b4:	2300      	movs	r3, #0
 80014b6:	4605      	mov	r5, r0
 80014b8:	4608      	mov	r0, r1
 80014ba:	6023      	str	r3, [r4, #0]
 80014bc:	f000 f83e 	bl	800153c <_isatty>
 80014c0:	1c43      	adds	r3, r0, #1
 80014c2:	d102      	bne.n	80014ca <_isatty_r+0x1a>
 80014c4:	6823      	ldr	r3, [r4, #0]
 80014c6:	b103      	cbz	r3, 80014ca <_isatty_r+0x1a>
 80014c8:	602b      	str	r3, [r5, #0]
 80014ca:	bd38      	pop	{r3, r4, r5, pc}
 80014cc:	20000090 	.word	0x20000090

080014d0 <_lseek_r>:
 80014d0:	b538      	push	{r3, r4, r5, lr}
 80014d2:	4c07      	ldr	r4, [pc, #28]	; (80014f0 <_lseek_r+0x20>)
 80014d4:	4605      	mov	r5, r0
 80014d6:	4608      	mov	r0, r1
 80014d8:	4611      	mov	r1, r2
 80014da:	2200      	movs	r2, #0
 80014dc:	6022      	str	r2, [r4, #0]
 80014de:	461a      	mov	r2, r3
 80014e0:	f000 f834 	bl	800154c <_lseek>
 80014e4:	1c43      	adds	r3, r0, #1
 80014e6:	d102      	bne.n	80014ee <_lseek_r+0x1e>
 80014e8:	6823      	ldr	r3, [r4, #0]
 80014ea:	b103      	cbz	r3, 80014ee <_lseek_r+0x1e>
 80014ec:	602b      	str	r3, [r5, #0]
 80014ee:	bd38      	pop	{r3, r4, r5, pc}
 80014f0:	20000090 	.word	0x20000090

080014f4 <__malloc_lock>:
 80014f4:	4770      	bx	lr

080014f6 <__malloc_unlock>:
 80014f6:	4770      	bx	lr

080014f8 <_read_r>:
 80014f8:	b538      	push	{r3, r4, r5, lr}
 80014fa:	4c07      	ldr	r4, [pc, #28]	; (8001518 <_read_r+0x20>)
 80014fc:	4605      	mov	r5, r0
 80014fe:	4608      	mov	r0, r1
 8001500:	4611      	mov	r1, r2
 8001502:	2200      	movs	r2, #0
 8001504:	6022      	str	r2, [r4, #0]
 8001506:	461a      	mov	r2, r3
 8001508:	f000 f828 	bl	800155c <_read>
 800150c:	1c43      	adds	r3, r0, #1
 800150e:	d102      	bne.n	8001516 <_read_r+0x1e>
 8001510:	6823      	ldr	r3, [r4, #0]
 8001512:	b103      	cbz	r3, 8001516 <_read_r+0x1e>
 8001514:	602b      	str	r3, [r5, #0]
 8001516:	bd38      	pop	{r3, r4, r5, pc}
 8001518:	20000090 	.word	0x20000090

0800151c <_close>:
 800151c:	4b02      	ldr	r3, [pc, #8]	; (8001528 <_close+0xc>)
 800151e:	2258      	movs	r2, #88	; 0x58
 8001520:	601a      	str	r2, [r3, #0]
 8001522:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001526:	4770      	bx	lr
 8001528:	20000090 	.word	0x20000090

0800152c <_fstat>:
 800152c:	4b02      	ldr	r3, [pc, #8]	; (8001538 <_fstat+0xc>)
 800152e:	2258      	movs	r2, #88	; 0x58
 8001530:	601a      	str	r2, [r3, #0]
 8001532:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001536:	4770      	bx	lr
 8001538:	20000090 	.word	0x20000090

0800153c <_isatty>:
 800153c:	4b02      	ldr	r3, [pc, #8]	; (8001548 <_isatty+0xc>)
 800153e:	2258      	movs	r2, #88	; 0x58
 8001540:	601a      	str	r2, [r3, #0]
 8001542:	2000      	movs	r0, #0
 8001544:	4770      	bx	lr
 8001546:	bf00      	nop
 8001548:	20000090 	.word	0x20000090

0800154c <_lseek>:
 800154c:	4b02      	ldr	r3, [pc, #8]	; (8001558 <_lseek+0xc>)
 800154e:	2258      	movs	r2, #88	; 0x58
 8001550:	601a      	str	r2, [r3, #0]
 8001552:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001556:	4770      	bx	lr
 8001558:	20000090 	.word	0x20000090

0800155c <_read>:
 800155c:	4b02      	ldr	r3, [pc, #8]	; (8001568 <_read+0xc>)
 800155e:	2258      	movs	r2, #88	; 0x58
 8001560:	601a      	str	r2, [r3, #0]
 8001562:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001566:	4770      	bx	lr
 8001568:	20000090 	.word	0x20000090

0800156c <_sbrk>:
 800156c:	4b04      	ldr	r3, [pc, #16]	; (8001580 <_sbrk+0x14>)
 800156e:	6819      	ldr	r1, [r3, #0]
 8001570:	4602      	mov	r2, r0
 8001572:	b909      	cbnz	r1, 8001578 <_sbrk+0xc>
 8001574:	4903      	ldr	r1, [pc, #12]	; (8001584 <_sbrk+0x18>)
 8001576:	6019      	str	r1, [r3, #0]
 8001578:	6818      	ldr	r0, [r3, #0]
 800157a:	4402      	add	r2, r0
 800157c:	601a      	str	r2, [r3, #0]
 800157e:	4770      	bx	lr
 8001580:	2000008c 	.word	0x2000008c
 8001584:	20000098 	.word	0x20000098

08001588 <_init>:
 8001588:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800158a:	bf00      	nop
 800158c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800158e:	bc08      	pop	{r3}
 8001590:	469e      	mov	lr, r3
 8001592:	4770      	bx	lr

08001594 <_fini>:
 8001594:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001596:	bf00      	nop
 8001598:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800159a:	bc08      	pop	{r3}
 800159c:	469e      	mov	lr, r3
 800159e:	4770      	bx	lr
